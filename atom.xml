<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ConanMusk</title>
  
  <subtitle>不说话，装高手</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-04T02:59:06.711Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>YingHao Chen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Windows实用命令行.md</title>
    <link href="http://example.com/2022/10/04/Windows%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C-md/"/>
    <id>http://example.com/2022/10/04/Windows%E5%AE%9E%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C-md/</id>
    <published>2022-10-04T02:59:05.000Z</published>
    <updated>2022-10-04T02:59:06.711Z</updated>
    
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>太赫兹单光子雷达探测技术.md</title>
    <link href="http://example.com/2022/10/02/%E5%A4%AA%E8%B5%AB%E5%85%B9%E5%8D%95%E5%85%89%E5%AD%90%E9%9B%B7%E8%BE%BE%E6%8E%A2%E6%B5%8B%E6%8A%80%E6%9C%AF-md/"/>
    <id>http://example.com/2022/10/02/%E5%A4%AA%E8%B5%AB%E5%85%B9%E5%8D%95%E5%85%89%E5%AD%90%E9%9B%B7%E8%BE%BE%E6%8E%A2%E6%B5%8B%E6%8A%80%E6%9C%AF-md/</id>
    <published>2022-10-02T11:35:08.000Z</published>
    <updated>2022-10-02T13:23:40.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="太赫兹雷达优点"><a href="#太赫兹雷达优点" class="headerlink" title="太赫兹雷达优点"></a>太赫兹雷达优点</h1><font face="微软雅黑" size=3 color=#FFFACD >太赫兹波处于电子学向光学的过渡频段, 相比于光波, 对烟雾穿透性更好, 且对空间目标高速运动产生的热环境效应与气动光学效应不敏感, 可用于空间高速运动目标探测; 相比于微波, 具有更短的波长和更大的绝对带宽, 能够实现对探测目标方位向细节的精细表征和距离向的高分辨成像</font><h1 id="应用价值"><a href="#应用价值" class="headerlink" title="应用价值"></a>应用价值</h1><font face="微软雅黑" size=3 color=#FFFACD >在微弱光电信号探测、雷达增程以及反隐身方面具有应用价值。</font><h1 id="相干探测与直接探测"><a href="#相干探测与直接探测" class="headerlink" title="相干探测与直接探测"></a>相干探测与直接探测</h1><h2 id="相干探测"><a href="#相干探测" class="headerlink" title="相干探测"></a>相干探测</h2><font face="微软雅黑" size=3 color=#FFFACD >本振信号与回波信号的光场交叠产生光混频，利用外差技术进行接收。<br>能够通过分析多普勒频偏实现对于物体速度的判断。</font><h2 id="直接探测"><a href="#直接探测" class="headerlink" title="直接探测"></a>直接探测</h2><h1 id="光子回波的检测"><a href="#光子回波的检测" class="headerlink" title="光子回波的检测"></a>光子回波的检测</h1><font face="微软雅黑" size=3 color=#FFFACD >常规：包络检测与阈值检测</font><h1 id="回波信号统计规律"><a href="#回波信号统计规律" class="headerlink" title="回波信号统计规律"></a>回波信号统计规律</h1><font face="微软雅黑" size=3 color=#FFFACD >目标回波信号具有规律，具有较好的时间相关性。<br>噪声信号时间相关性差。</font><h1 id="量子效率"><a href="#量子效率" class="headerlink" title="量子效率"></a>量子效率</h1><font face="微软雅黑" size=3 color=#FFFACD >激发产生的初始光电子数与入射总光子数的比值定义为探测器的量子效率</font>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;太赫兹雷达优点&quot;&gt;&lt;a href=&quot;#太赫兹雷达优点&quot; class=&quot;headerlink&quot; title=&quot;太赫兹雷达优点&quot;&gt;&lt;/a&gt;太赫兹雷达优点&lt;/h1&gt;&lt;font face=&quot;微软雅黑&quot; size=3 color=#FFFACD &gt;
太赫兹波处于电子学向光学</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nonlocal.md</title>
    <link href="http://example.com/2022/10/02/nonlocal-md/"/>
    <id>http://example.com/2022/10/02/nonlocal-md/</id>
    <published>2022-10-02T10:54:35.000Z</published>
    <updated>2022-10-02T10:54:35.947Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>百度飞桨.md</title>
    <link href="http://example.com/2022/10/02/%E7%99%BE%E5%BA%A6%E9%A3%9E%E6%A1%A8-md/"/>
    <id>http://example.com/2022/10/02/%E7%99%BE%E5%BA%A6%E9%A3%9E%E6%A1%A8-md/</id>
    <published>2022-10-02T07:28:52.000Z</published>
    <updated>2022-10-02T07:31:47.467Z</updated>
    
    
    
    
    <category term="百度飞桨" scheme="http://example.com/categories/%E7%99%BE%E5%BA%A6%E9%A3%9E%E6%A1%A8/"/>
    
    
    <category term="十二猫分类" scheme="http://example.com/tags/%E5%8D%81%E4%BA%8C%E7%8C%AB%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>中科大黎正平博士论文阅读.md</title>
    <link href="http://example.com/2022/10/01/%E4%B8%AD%E7%A7%91%E5%A4%A7%E9%BB%8E%E6%AD%A3%E5%B9%B3%E5%8D%9A%E5%A3%AB%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-md/"/>
    <id>http://example.com/2022/10/01/%E4%B8%AD%E7%A7%91%E5%A4%A7%E9%BB%8E%E6%AD%A3%E5%B9%B3%E5%8D%9A%E5%A3%AB%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB-md/</id>
    <published>2022-10-01T08:25:37.000Z</published>
    <updated>2022-10-01T11:00:27.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="量子成像"><a href="#量子成像" class="headerlink" title="量子成像"></a>量子成像</h1><font face="微软雅黑" size=3 color=#F08080 ><br>发射纠缠的量子光(量子纠缠成像)<br>发射量子级别的光(非纠缠态的单光子)<br>发射经典的激光，但是使用量子光探测手段(SPAD单光子探测器以及时间相关单光子计数)</br></font><h1 id="激光光源"><a href="#激光光源" class="headerlink" title="激光光源"></a>激光光源</h1><font face="微软雅黑" size=3 color=#F08080 ><br>近红外光优势大，具有高透射率。<br>更长的波长在大气环境中具有更加良好的成像效果，更好的克服大气衰减。</br></font>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;量子成像&quot;&gt;&lt;a href=&quot;#量子成像&quot; class=&quot;headerlink&quot; title=&quot;量子成像&quot;&gt;&lt;/a&gt;量子成像&lt;/h1&gt;&lt;font face=&quot;微软雅黑&quot; size=3 color=#F08080 &gt;
&lt;br&gt;发射纠缠的量子光(量子纠缠成像)
&lt;br</summary>
      
    
    
    
    <category term="论文阅读记录" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="单光子成像" scheme="http://example.com/tags/%E5%8D%95%E5%85%89%E5%AD%90%E6%88%90%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>latex语法记录</title>
    <link href="http://example.com/2022/09/30/latex%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2022/09/30/latex%E8%AF%AD%E6%B3%95%E8%AE%B0%E5%BD%95/</id>
    <published>2022-09-30T14:36:38.000Z</published>
    <updated>2022-09-30T15:41:11.383Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\section</span>&#123;该部分的名称&#125; //其后可以接 /label&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\cite</span>&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\textsl</span>&#123;et al.&#125;</span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >latex的图片使用方法。</font><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">\begin</span>&#123;figure&#125;[pt]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\abovecaptionskip</span>&#125;&#123;0.5cm&#125;</span><br><span class="line"><span class="keyword">\setlength</span>&#123;<span class="keyword">\belowcaptionskip</span>&#125;&#123;0cm&#125;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=12.5cm]&#123;Figure1.png&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;SPAD-based pulsed LiDAR imaging system mainly includes a transmitting and receiving optical system, a pulsed laser, a single-photon avalanche diode <span class="keyword">\cite</span>&#123;t7&#125;, a time-correlated single-photon counter (TCSPC) and scanning mirror. The receiving optical system collects the diffuse reflected echo photons from the pulsed laser irradiating the target and couples them to the SPAD. The moments of the transmitted and received signals are recorded by the TCSPC module.&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;figure1&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >其中的\caption{},中的内容是对图片的描述语言。<p>\lable{}中的内容是该图片在后面进行引用的标志。<br></font></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Fig. <span class="keyword">\ref</span>&#123;figure1&#125; //引用图片</span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >\ref{},其中的，就是lable的内容，比如\ref{figure1}</font>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight latex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span cla</summary>
      
    
    
    
    <category term="latex" scheme="http://example.com/categories/latex/"/>
    
    
    <category term="latex" scheme="http://example.com/tags/latex/"/>
    
  </entry>
  
  <entry>
    <title>Github上传本地到github仓库</title>
    <link href="http://example.com/2022/09/30/github/"/>
    <id>http://example.com/2022/09/30/github/</id>
    <published>2022-09-30T12:10:40.000Z</published>
    <updated>2022-10-01T07:04:51.486Z</updated>
    
    <content type="html"><![CDATA[<font face="微软雅黑" size=3 color=#F08080 >在此之前先建立仓库，公开仓库。</font><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git add --all</span><br><span class="line">git commit on &quot;描述&quot;</span><br><span class="line"> git remote add origin git@github.com:ConanMusk/STM32_F103ZET6_CUBEMAX.git</span><br><span class="line">git push -u origin master //分支名字</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;font face=&quot;微软雅黑&quot; size=3 color=#F08080 &gt;
在此之前先建立仓库，公开仓库。
&lt;/font&gt;

&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp</summary>
      
    
    
    
    <category term="github" scheme="http://example.com/categories/github/"/>
    
    
    <category term="github" scheme="http://example.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/09/29/hello-world/"/>
    <id>http://example.com/2022/09/29/hello-world/</id>
    <published>2022-09-29T03:14:36.825Z</published>
    <updated>2022-09-29T08:12:58.151Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://conanmusk-blog-image.oss-cn-nanjing.aliyuncs.com/img/202209190918515.png" alt="test"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MarkDown语法</title>
    <link href="http://example.com/2022/09/17/MarkDown%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/09/17/MarkDown%E8%AF%AD%E6%B3%95/</id>
    <published>2022-09-16T16:00:00.000Z</published>
    <updated>2022-09-30T12:24:56.435Z</updated>
    
    <content type="html"><![CDATA[<h1 id="qquad-qquad-qquad-MarkDown-语法"><a href="#qquad-qquad-qquad-MarkDown-语法" class="headerlink" title="$\qquad\qquad\qquad$ MarkDown 语法"></a>$\qquad\qquad\qquad$ MarkDown 语法</br></h1><ul><li><a href="#qquadqquadqquad-markdown-%E8%AF%AD%E6%B3%95br">MarkDown 语法</br></a><ul><li><a href="#%E7%9B%AE%E5%BD%95%E5%88%B6%E4%BD%9C%E5%8F%AF%E8%B7%B3%E8%BD%AC">目录制作(可跳转)</a></li><li><a href="#%E6%96%87%E5%AD%97%E5%B1%85%E4%B8%AD%E7%AD%89%E5%AF%B9%E9%BD%90%E6%93%8D%E4%BD%9C">文字居中等对齐操作</a></li><li><a href="#%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2">背景颜色</a></li><li><a href="#%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE">字体设置</a></li><li><a href="#%E7%BC%A9%E8%BF%9B">缩进</a></li><li><a href="#%E6%8D%A2%E8%A1%8C">换行</a></li><li><a href="#%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">插入图片</a></li><li><a href="#%E4%BB%A3%E7%A0%81%E6%AE%B5%E6%8F%92%E5%85%A5">代码段插入</a></li><li><a href="#%E5%88%97%E8%A1%A8">列表</a></li><li><a href="#%E6%8F%92%E5%85%A5%E8%B6%85%E9%93%BE%E6%8E%A5">插入超链接</a><ul><li><a href="#%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80">网络地址</a></li></ul></li><li><a href="#%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE">常用标签</a></li><li><a href="#%E9%A2%9C%E8%89%B2%E5%88%97%E8%A1%A8">颜色列表</a></li></ul></li></ul><h2 id="目录制作-可跳转"><a href="#目录制作-可跳转" class="headerlink" title="目录制作(可跳转)"></a>目录制作(可跳转)</h2><p><a href="#%E6%8D%A2%E8%A1%8C">名字</a></br></p><ul><li><a href="#%E5%88%97%E8%A1%A8">列表</a></li><li><a href="#%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">插入图片</a>  <figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [](<span class="link">#</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="文字居中等对齐操作"><a href="#文字居中等对齐操作" class="headerlink" title="文字居中等对齐操作"></a>文字居中等对齐操作</h2><center>  SILVER</center></br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span><br><span class="line">  文字内容</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h2><table><tr><td bgcolor=#000000>背景色的设置是按照十六进制颜色值：#000000</td></tr></table><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#000000</span>&gt;</span></span></span><br><span class="line">内容</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="字体设置"><a href="#字体设置" class="headerlink" title="字体设置"></a>字体设置</h2><p><code>陈颖豪</code><br><code> 斜体：</code><em>陈颖豪</em><br><code> 粗体：</code><strong>陈颖豪</strong><br><code>陈颖豪</code><br><font face="微软雅黑" size=3 color=#FF0000 ><br>微软雅黑字体<br></font><br><font face="微软雅黑" >微软雅黑字体</font><br><font face="黑体" >黑体</font><br><font face="宋体" >宋体</font><br><font size=3 >3号字</font><br><font size=4 >4号字</font><br><font color=#FF0000 >红色</font><br><font color=#008000 >绿色</font><br><font color=#0000FF >蓝色</font></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一般的话，直接 <span class="code">` 内容  `</span></span><br><span class="line"><span class="code">`` 陈颖豪 `</span>`<span class="language-xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="code">`` 斜体：`</span>`<span class="emphasis">*陈颖豪*</span></span><br><span class="line"><span class="code">`` 粗体：`</span>`<span class="strong">**陈颖豪**</span><span class="language-xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="code">` 陈颖豪 `</span><span class="language-xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span> <span class="attr">size</span>=<span class="string">3</span> <span class="attr">color</span>=<span class="string">#FF0000</span> &gt;</span></span>微软雅黑字体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span> &gt;</span></span>微软雅黑字体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> &gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;宋体&quot;</span> &gt;</span></span>宋体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">3</span> &gt;</span></span>3号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">4</span> &gt;</span></span>4号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#FF0000</span> &gt;</span></span>红色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#008000</span> &gt;</span></span>绿色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0000FF</span> &gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$\qquad$</span><br></pre></td></tr></table></figure><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>换一行</br><br>结果</br><br>换几行就打几个</br></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>本地图片<br></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">&#x27;随便取名字&#x27;</span>](<span class="link">图片地址</span>)</span><br></pre></td></tr></table></figure><p>网络图片</br></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">&#x27;名字随便&#x27;</span>](<span class="link">&quot;网络地址&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="代码段插入"><a href="#代码段插入" class="headerlink" title="代码段插入"></a>代码段插入</h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">``` 代码的语言的缩写</span></span><br><span class="line"><span class="code">这一行在加上 ```</span>包围起来</span><br><span class="line">常用的 py   c   md   </span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字 + 英文句号 + 空格</span><br></pre></td></tr></table></figure></li><li><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 或者 +</span><br></pre></td></tr></table></figure></li><li><h4 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [ ]</span><br></pre></td></tr></table></figure></li></ul><h2 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h2><h4 id="网络地址"><a href="#网络地址" class="headerlink" title="网络地址"></a>网络地址</h4>  <figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">http://www.baidu.com/ &#x27;百度一下&#x27;</span>)</span><br></pre></td></tr></table></figure><p>  效果图</br><br>  <a href="http://www.baidu.com/" title="百度一下">百度</a></br><br>-[x]</p><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><p><kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br><u>带下划线的文本</u><br>30<sup>th</sup><br>H<sub>2</sub>O<br><img src="F:\单光子论文\笔记\2022-1-28\Conv3D.png" width="100%"><br><code>控制图片的大小</code><br><a href="-----------------------------------------------------------------------------------">^_^</a>: ————————————————————————————</p><h2 id="颜色列表"><a href="#颜色列表" class="headerlink" title="颜色列表"></a>颜色列表</h2><p><a href="%22https://blog.csdn.net/thither_shore/article/details/52328313?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1&utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1%22">颜色列表CSDN链接</a></p><table><tbody>    <tr>        <th rowspan="3">我占了三行</th>        <th>第一列</th>        <th>第二列</th>        <th>第三列</th>    </tr>    <tr>        <td>第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr>    <tr>        <td>第一列</td>        <td>第二列</td>        <td>第三列</td>    </tr></table>  </br><p>本文最后附上<strong>转载</strong>自 <a href="http://blog.csdn.net/testcs_dn/article/details/45719357/#comments">CSDN-markdown编辑器语法——字体、字号与颜色</a> 的颜色列表&#xff0c;按颜色名排序。 </p><table><tbody><tr><th>颜色名</th><th>十六进制颜色值</th><th>颜色</th></tr><tr><td><font color="AliceBlue">AliceBlue</font></td><td><font color="#F0F8FF">#F0F8FF</font></td><td bgcolor="#F0F8FF">rgb(240, 248, 255)</td></tr><tr><td><font color="AntiqueWhite">AntiqueWhite</font></td><td><font color="#FAEBD7">#FAEBD7</font></td><td bgcolor="#FAEBD7">rgb(250, 235, 215)</td></tr><tr><td><font color="Aqua">Aqua</font></td><td><font color="#00FFFF">#00FFFF</font></td><td bgcolor="#00FFFF">rgb(0, 255, 255)</td></tr><tr><td><font color="Aquamarine">Aquamarine</font></td><td><font color="#7FFFD4">#7FFFD4</font></td><td bgcolor="#7FFFD4">rgb(127, 255, 212)</td></tr><tr><td><font color="Azure">Azure</font></td><td><font color="#F0FFFF">#F0FFFF</font></td><td bgcolor="#F0FFFF">rgb(240, 255, 255)</td></tr><tr><td><font color="Beige">Beige</font></td><td><font color="#F5F5DC">#F5F5DC</font></td><td bgcolor="#F5F5DC">rgb(245, 245, 220)</td></tr><tr><td><font color="Bisque">Bisque</font></td><td><font color="#FFE4C4">#FFE4C4</font></td><td bgcolor="#FFE4C4">rgb(255, 228, 196)</td></tr><tr><td><font color="Black">Black</font></td><td><font color="#000000">#000000</font></td><td bgcolor="#000000">rgb(0, 0, 0)</td></tr><tr><td><font color="BlanchedAlmond">BlanchedAlmond</font></td><td><font color="#FFEBCD">#FFEBCD</font></td><td bgcolor="#FFEBCD">rgb(255, 235, 205)</td></tr><tr><td><font color="Blue">Blue</font></td><td><font color="#0000FF">#0000FF</font></td><td bgcolor="#0000FF">rgb(0, 0, 255)</td></tr><tr><td><font color="BlueViolet">BlueViolet</font></td><td><font color="#8A2BE2">#8A2BE2</font></td><td bgcolor="#8A2BE2">rgb(138, 43, 226)</td></tr><tr><td><font color="Brown">Brown</font></td><td><font color="#A52A2A">#A52A2A</font></td><td bgcolor="#A52A2A">rgb(165, 42, 42)</td></tr><tr><td><font color="BurlyWood">BurlyWood</font></td><td><font color="#DEB887">#DEB887</font></td><td bgcolor="#DEB887">rgb(222, 184, 135)</td></tr><tr><td><font color="CadetBlue">CadetBlue</font></td><td><font color="#5F9EA0">#5F9EA0</font></td><td bgcolor="#5F9EA0">rgb(95, 158, 160)</td></tr><tr><td><font color="Chartreuse">Chartreuse</font></td><td><font color="#7FFF00">#7FFF00</font></td><td bgcolor="#7FFF00">rgb(127, 255, 0)</td></tr><tr><td><font color="Chocolate">Chocolate</font></td><td><font color="#D2691E">#D2691E</font></td><td bgcolor="#D2691E">rgb(210, 105, 30)</td></tr><tr><td><font color="Coral">Coral</font></td><td><font color="#FF7F50">#FF7F50</font></td><td bgcolor="#FF7F50">rgb(255, 127, 80)</td></tr><tr><td><font color="CornflowerBlue">CornflowerBlue</font></td><td><font color="#6495ED">#6495ED</font></td><td bgcolor="#6495ED">rgb(100, 149, 237)</td></tr><tr><td><font color="Cornsilk">Cornsilk</font></td><td><font color="#FFF8DC">#FFF8DC</font></td><td bgcolor="#FFF8DC">rgb(255, 248, 220)</td></tr><tr><td><font color="Crimson">Crimson</font></td><td><font color="#DC143C">#DC143C</font></td><td bgcolor="#DC143C">rgb(220, 20, 60)</td></tr><tr><td><font color="Cyan">Cyan</font></td><td><font color="#00FFFF">#00FFFF</font></td><td bgcolor="#00FFFF">rgb(0, 255, 255)</td></tr><tr><td><font color="DarkBlue">DarkBlue</font></td><td><font color="#00008B">#00008B</font></td><td bgcolor="#00008B">rgb(0, 0, 139)</td></tr><tr><td><font color="DarkCyan">DarkCyan</font></td><td><font color="#008B8B">#008B8B</font></td><td bgcolor="#008B8B">rgb(0, 139, 139)</td></tr><tr><td><font color="DarkGoldenRod">DarkGoldenRod</font></td><td><font color="#B8860B">#B8860B</font></td><td bgcolor="#B8860B">rgb(184, 134, 11)</td></tr><tr><td><font color="DarkGray">DarkGray</font></td><td><font color="#A9A9A9">#A9A9A9</font></td><td bgcolor="#A9A9A9">rgb(169, 169, 169)</td></tr><tr><td><font color="DarkGreen">DarkGreen</font></td><td><font color="#006400">#006400</font></td><td bgcolor="#006400">rgb(0, 100, 0)</td></tr><tr><td><font color="DarkKhaki">DarkKhaki</font></td><td><font color="#BDB76B">#BDB76B</font></td><td bgcolor="#BDB76B">rgb(189, 183, 107)</td></tr><tr><td><font color="DarkMagenta">DarkMagenta</font></td><td><font color="#8B008B">#8B008B</font></td><td bgcolor="#8B008B">rgb(139, 0, 139)</td></tr><tr><td><font color="DarkOliveGreen">DarkOliveGreen</font></td><td><font color="#556B2F">#556B2F</font></td><td bgcolor="#556B2F">rgb(85, 107, 47)</td></tr><tr><td><font color="Darkorange">Darkorange</font></td><td><font color="#FF8C00">#FF8C00</font></td><td bgcolor="#FF8C00">rgb(255, 140, 0)</td></tr><tr><td><font color="DarkOrchid">DarkOrchid</font></td><td><font color="#9932CC">#9932CC</font></td><td bgcolor="#9932CC">rgb(153, 50, 204)</td></tr><tr><td><font color="DarkRed">DarkRed</font></td><td><font color="#8B0000">#8B0000</font></td><td bgcolor="#8B0000">rgb(139, 0, 0)</td></tr><tr><td><font color="DarkSalmon">DarkSalmon</font></td><td><font color="#E9967A">#E9967A</font></td><td bgcolor="#E9967A">rgb(233, 150, 122)</td></tr><tr><td><font color="DarkSeaGreen">DarkSeaGreen</font></td><td><font color="#8FBC8F">#8FBC8F</font></td><td bgcolor="#8FBC8F">rgb(143, 188, 143)</td></tr><tr><td><font color="DarkSlateBlue">DarkSlateBlue</font></td><td><font color="#483D8B">#483D8B</font></td><td bgcolor="#483D8B">rgb(72, 61, 139)</td></tr><tr><td><font color="DarkSlateGray">DarkSlateGray</font></td><td><font color="#2F4F4F">#2F4F4F</font></td><td bgcolor="#2F4F4F">rgb(47, 79, 79)</td></tr><tr><td><font color="DarkTurquoise">DarkTurquoise</font></td><td><font color="#00CED1">#00CED1</font></td><td bgcolor="#00CED1">rgb(0, 206, 209)</td></tr><tr><td><font color="DarkViolet">DarkViolet</font>/td><td><font color="#9400D3">#9400D3</font></td><td bgcolor="#9400D3">rgb(148, 0, 211)</td></tr><tr><td><font color="DeepPink">DeepPink</font></td><td><font color="#FF1493">#FF1493</font></td><td bgcolor="#FF1493">rgb(255, 20, 147)</td></tr><tr><td><font color="DeepSkyBlue">DeepSkyBlue</font></td><td><font color="#00BFFF">#00BFFF</font></td><td bgcolor="#00BFFF">rgb(0, 191, 255)</td></tr><tr><td><font color="DimGray">DimGray</font></td><td><font color="#696969">#696969</font></td><td bgcolor="#696969">rgb(105, 105, 105)</td></tr><tr><td><font color="DodgerBlue">DodgerBlue</font></td><td><font color="#1E90FF">#1E90FF</font></td><td bgcolor="#1E90FF">rgb(30, 144, 255)</td></tr><tr><td><font color="Feldspar">Feldspar</font></td><td><font color="#D19275">#D19275</font></td><td bgcolor="#D19275">rgb(209, 146, 117)</td></tr><tr><td><font color="FireBrick">FireBrick</font></td><td><font color="#B22222">#B22222</font></td><td bgcolor="#B22222">rgb(178, 34, 34)</td></tr><tr><td><font color="FloralWhite">FloralWhite</font></td><td><font color="#FFFAF0">#FFFAF0</font></td><td bgcolor="#FFFAF0">rgb(255, 250, 240)</td></tr><tr><td><font color="ForestGreen">ForestGreen</font></td><td><font color="#228B22">#228B22</font></td><td bgcolor="#228B22">rgb(34, 139, 34)</td></tr><tr><td><font color="Fuchsia">Fuchsia</font></td><td><font color="#FF00FF">#FF00FF</font></td><td bgcolor="#FF00FF">rgb(255, 0, 255)</td></tr><tr><td><font color="Gainsboro">Gainsboro</font></td><td><font color="#DCDCDC">#DCDCDC</font></td><td bgcolor="#DCDCDC">rgb(220, 220, 220)</td></tr><tr><td><font color="GhostWhite">GhostWhite</font></td><td><font color="#F8F8FF">#F8F8FF</font></td><td bgcolor="#F8F8FF">rgb(248, 248, 255)</td></tr><tr><td><font color="Gold">Gold</font></td><td><font color="#FFD700">#FFD700</font></td><td bgcolor="#FFD700">rgb(255, 215, 0)</td></tr><tr><td><font color="GoldenRod">GoldenRod</font></td><td><font color="#DAA520">#DAA520</font></td><td bgcolor="#DAA520">rgb(218, 165, 32)</td></tr><tr><td><font color="Gray">Gray</font></td><td><font color="#808080">#808080</font></td><td bgcolor="#808080">rgb(128, 128, 128)</td></tr><tr><td><font color="Green">Green</font></td><td><font color="#008000">#008000</font></td><td bgcolor="#008000">rgb(0, 128, 0)</td></tr><tr><td><font color="GreenYellow">GreenYellow</font></td><td><font color="#ADFF2F">#ADFF2F</font></td><td bgcolor="#ADFF2F">rgb(173, 255, 47)</td></tr><tr><td><font color="HoneyDew">HoneyDew</font></td><td><font color="#F0FFF0">#F0FFF0</font></td><td bgcolor="#F0FFF0">rgb(240, 255, 240)</td></tr><tr><td><font color="HotPink">HotPink</font></td><td><font color="#FF69B4">#FF69B4</font></td><td bgcolor="#FF69B4">rgb(255, 105, 180)</td></tr><tr><td><font color="IndianRed">IndianRed</font></td><td><font color="#CD5C5C">#CD5C5C</font></td><td bgcolor="#CD5C5C">rgb(205, 92, 92)</td></tr><tr><td><font color="Indigo">Indigo</font></td><td><font color="#4B0082">#4B0082</font></td><td bgcolor="#4B0082">rgb(75, 0, 130)</td></tr><tr><td><font color="Ivory">Ivory</font></td><td><font color="#FFFFF0">#FFFFF0</font></td><td bgcolor="#FFFFF0">rgb(255, 255, 240)</td></tr><tr><td><font color="Khaki">Khaki</font></td><td><font color="#F0E68C">#F0E68C</font></td><td bgcolor="#F0E68C">rgb(240, 230, 140)</td></tr><tr><td><font color="Lavender">Lavender</font></td><td><font color="#E6E6FA">#E6E6FA</font></td><td bgcolor="#E6E6FA">rgb(230, 230, 250)</td></tr><tr><td><font color="LavenderBlush">LavenderBlush</font></td><td><font color="#FFF0F5">#FFF0F5</font></td><td bgcolor="#FFF0F5">rgb(255, 240, 245)</td></tr><tr><td><font color="LawnGreen">LawnGreen</font></td><td><font color="#7CFC00">#7CFC00</font></td><td bgcolor="#7CFC00">rgb(124, 252, 0)</td></tr><tr><td><font color="LemonChiffon">LemonChiffon</font></td><td><font color="#FFFACD">#FFFACD</font></td><td bgcolor="#FFFACD">rgb(255, 250, 205)</td></tr><tr><td><font color="LightBlue">LightBlue</font></td><td><font color="#ADD8E6">#ADD8E6</font></td><td bgcolor="#ADD8E6">rgb(173, 216, 230)</td></tr><tr><td><font color="LightCoral">LightCoral</font></td><td><font color="#F08080">#F08080</font></td><td bgcolor="#F08080">rgb(240, 128, 128)</td></tr><tr><td><font color="LightCyan">LightCyan</font></td><td><font color="#E0FFFF">#E0FFFF</font></td><td bgcolor="#E0FFFF">rgb(224, 255, 255)</td></tr><tr><td><font color="LightGoldenRodYellow">LightGoldenRodYellow</font></td><td><font color="#FAFAD2">#FAFAD2</font></td><td bgcolor="#FAFAD2">rgb(250, 250, 210)</td></tr><tr><td><font color="LightGrey">LightGrey</font></td><td><font color="#D3D3D3">#D3D3D3</font></td><td bgcolor="#D3D3D3">rgb(211, 211, 211)</td></tr><tr><td><font color="LightGreen">LightGreen</font></td><td><font color="#90EE90">#90EE90</font></td><td bgcolor="#90EE90">rgb(144, 238, 144)</td></tr><tr><td><font color="LightPink">LightPink</font></td><td><font color="#FFB6C1">#FFB6C1</font></td><td bgcolor="#FFB6C1">rgb(255, 182, 193)</td></tr><tr><td><font color="LightSalmon">LightSalmon</font></td><td><font color="#FFA07A">#FFA07A</font></td><td bgcolor="#FFA07A">rgb(255, 160, 122)</td></tr><tr><td><font color="LightSeaGreen">LightSeaGreen</font></td><td><font color="#20B2AA">#20B2AA</font></td><td bgcolor="#20B2AA">rgb(32, 178, 170)</td></tr><tr><td><font color="LightSkyBlue">LightSkyBlue</font></td><td><font color="#87CEFA">#87CEFA</font></td><td bgcolor="#87CEFA">rgb(135, 206, 250)</td></tr><tr><td><font color="LightSlateBlue">LightSlateBlue</font></td><td><font color="#8470FF">#8470FF</font></td><td bgcolor="#8470FF">rgb(132, 112, 255)</td></tr><tr><td><font color="LightSlateGray">LightSlateGray</font></td><td><font color="#778899">#778899</font></td><td bgcolor="#778899">rgb(119, 136, 153)</td></tr><tr><td><font color="LightSteelBlue">LightSteelBlue</font></td><td><font color="#B0C4DE">#B0C4DE</font></td><td bgcolor="#B0C4DE">rgb(176, 196, 222)</td></tr><tr><td><font color="LightYellow">LightYellow</font></td><td><font color="#FFFFE0">#FFFFE0</font></td><td bgcolor="#FFFFE0">rgb(255, 255, 224)</td></tr><tr><td><font color="Lime">Lime</font></td><td><font color="#00FF00">#00FF00</font></td><td bgcolor="#00FF00">rgb(0, 255, 0)</td></tr><tr><td><font color="LimeGreen">LimeGreen</font></td><td><font color="#32CD32">#32CD32</font></td><td bgcolor="#32CD32">rgb(50, 205, 50)</td></tr><tr><td><font color="Linen">Linen</font></td><td><font color="#FAF0E6">#FAF0E6</font></td><td bgcolor="#FAF0E6">rgb(250, 240, 230)</td></tr><tr><td><font color="Magenta">Magenta</font></td><td><font color="#FF00FF">#FF00FF</font></td><td bgcolor="#FF00FF">rgb(255, 0, 255)</td></tr><tr><td><font color="Maroon">Maroon</font></td><td><font color="#800000">#800000</font></td><td bgcolor="#800000">rgb(128, 0, 0)</td></tr><tr><td><font color="MediumAquaMarine">MediumAquaMarine</font></td><td><font color="#66CDAA">#66CDAA</font></td><td bgcolor="#66CDAA">rgb(102, 205, 170)</td></tr><tr><td><font color="MediumBlue">MediumBlue</font></td><td><font color="#0000CD">#0000CD</font></td><td bgcolor="#0000CD">rgb(0, 0, 205)</td></tr><tr><td><font color="MediumOrchid">MediumOrchid</font></td><td><font color="#BA55D3">#BA55D3</font></td><td bgcolor="#BA55D3">rgb(186, 85, 211)</td></tr><tr><td><font color="MediumPurple">MediumPurple</font></td><td><font color="#9370D8">#9370D8</font></td><td bgcolor="#9370D8">rgb(147, 112, 216)</td></tr><tr><td><font color="MediumSeaGreen">MediumSeaGreen</font></td><td><font color="#3CB371">#3CB371</font></td><td bgcolor="#3CB371">rgb(60, 179, 113)</td></tr><tr><td><font color="MediumSlateBlue">MediumSlateBlue</font></td><td><font color="#7B68EE">#7B68EE</font></td><td bgcolor="#7B68EE">rgb(123, 104, 238)</td></tr><tr><td><font color="MediumSpringGreen">MediumSpringGreen</font></td><td><font color="#00FA9A">#00FA9A</font></td><td bgcolor="#00FA9A">rgb(0, 250, 154)</td></tr><tr><td><font color="MediumTurquoise">MediumTurquoise</font></td><td><font color="#48D1CC">#48D1CC</font></td><td bgcolor="#48D1CC">rgb(72, 209, 204)</td></tr><tr><td><font color="MediumVioletRed">MediumVioletRed</font></td><td><font color="#C71585">#C71585</font></td><td bgcolor="#C71585">rgb(199, 21, 133)</td></tr><tr><td><font color="MidnightBlue">MidnightBlue</font></td><td><font color="#191970">#191970</font></td><td bgcolor="#191970">rgb(25, 25, 112)</td></tr><tr><td><font color="MintCream">MintCream</font></td><td><font color="#F5FFFA">#F5FFFA</font></td><td bgcolor="#F5FFFA">rgb(245, 255, 250)</td></tr><tr><td><font color="MistyRose">MistyRose</font></td><td><font color="#FFE4E1">#FFE4E1</font></td><td bgcolor="#FFE4E1">rgb(255, 228, 225)</td></tr><tr><td><font color="Moccasin">Moccasin</font></td><td><font color="#FFE4B5">#FFE4B5</font></td><td bgcolor="#FFE4B5">rgb(255, 228, 181)</td></tr><tr><td><font color="NavajoWhite">NavajoWhite</font></td><td><font color="#FFDEAD">#FFDEAD</font></td><td bgcolor="#FFDEAD">rgb(255, 222, 173)</td></tr><tr><td><font color="Navy">Navy</font></td><td><font color="#000080">#000080</font></td><td bgcolor="#000080">rgb(0, 0, 128)</td></tr><tr><td><font color="OldLace">OldLace</font></td><td><font color="#FDF5E6">#FDF5E6</font></td><td bgcolor="#FDF5E6">rgb(253, 245, 230)</td></tr><tr><td><font color="Olive">Olive</font></td><td><font color="#808000">#808000</font></td><td bgcolor="#808000">rgb(128, 128, 0)</td></tr><tr><td><font color="OliveDrab">OliveDrab</font></td><td><font color="#6B8E23">#6B8E23</font></td><td bgcolor="#6B8E23">rgb(107, 142, 35)</td></tr><tr><td><font color="Orange">Orange</font></td><td><font color="#FFA500">#FFA500</font></td><td bgcolor="#FFA500">rgb(255, 165, 0)</td></tr><tr><td><font color="OrangeRed">OrangeRed</font></td><td><font color="#FF4500">#FF4500</font></td><td bgcolor="#FF4500">rgb(255, 69, 0)</td></tr><tr><td><font color="Orchid">Orchid</font></td><td><font color="#DA70D6">#DA70D6</font></td><td bgcolor="#DA70D6">rgb(218, 112, 214)</td></tr><tr><td><font color="PaleGoldenRod">PaleGoldenRod</font></td><td><font color="#EEE8AA">#EEE8AA</font></td><td bgcolor="#EEE8AA">rgb(238, 232, 170)</td></tr><tr><td><font color="PaleGreen">PaleGreen</font></td><td><font color="#98FB98">#98FB98</font></td><td bgcolor="#98FB98">rgb(152, 251, 152)</td></tr><tr><td><font color="PaleTurquoise">PaleTurquoise</font></td><td><font color="#AFEEEE">#AFEEEE</font></td><td bgcolor="#AFEEEE">rgb(175, 238, 238)</td></tr><tr><td><font color="PaleVioletRed">PaleVioletRed</font></td><td><font color="#D87093">#D87093</font></td><td bgcolor="#D87093">rgb(216, 112, 147)</td></tr><tr><td><font color="PapayaWhip">PapayaWhip</font></td><td><font color="#FFEFD5">#FFEFD5</font></td><td bgcolor="#FFEFD5">rgb(255, 239, 213)</td></tr><tr><td><font color="PeachPuff">PeachPuff</font></td><td><font color="#FFDAB9">#FFDAB9</font></td><td bgcolor="#FFDAB9">rgb(255, 218, 185)</td></tr><tr><td><font color="Peru">Peru</font></td><td><font color="#CD853F">#CD853F</font></td><td bgcolor="#CD853F">rgb(205, 133, 63)</td></tr><tr><td><font color="Pink">Pink</font></td><td><font color="#FFC0CB">#FFC0CB</font></td><td bgcolor="#FFC0CB">rgb(255, 192, 203)</td></tr><tr><td><font color="Plum">Plum</font></td><td><font color="#DDA0DD">#DDA0DD</font></td><td bgcolor="#DDA0DD">rgb(221, 160, 221)</td></tr><tr><td><font color="PowderBlue">PowderBlue</font></td><td><font color="#B0E0E6">#B0E0E6</font></td><td bgcolor="#B0E0E6">rgb(176, 224, 230)</td></tr><tr><td><font color="Purple">Purple</font></td><td><font color="#800080">#800080</font></td><td bgcolor="#800080">rgb(128, 0, 128)</td></tr><tr><td><font color="Red">Red</font></td><td><font color="#FF0000">#FF0000</font></td><td bgcolor="#FF0000">rgb(255, 0, 0)</td></tr><tr><td><font color="RosyBrown">RosyBrown</font></td><td><font color="#BC8F8F">#BC8F8F</font></td><td bgcolor="#BC8F8F">rgb(188, 143, 143)</td></tr><tr><td><font color="RoyalBlue">RoyalBlue</font></td><td><font color="#4169E1">#4169E1</font></td><td bgcolor="#4169E1">rgb(65, 105, 225)</td></tr><tr><td><font color="SaddleBrown">SaddleBrown</font></td><td><font color="#8B4513">#8B4513</font></td><td bgcolor="#8B4513">rgb(139, 69, 19)</td></tr><tr><td><font color="Salmon">Salmon</font></td><td><font color="#FA8072">#FA8072</font></td><td bgcolor="#FA8072">rgb(250, 128, 114)</td></tr><tr><td><font color="SandyBrown">SandyBrown</font></td><td><font color="#F4A460">#F4A460</font></td><td bgcolor="#F4A460">rgb(244, 164, 96)</td></tr><tr><td><font color="SeaGreen">SeaGreen</font></td><td><font color="#2E8B57">#2E8B57</font></td><td bgcolor="#2E8B57">rgb(46, 139, 87)</td></tr><tr><td><font color="SeaShell">SeaShell</font></td><td><font color="#FFF5EE">#FFF5EE</font></td><td bgcolor="#FFF5EE">rgb(255, 245, 238)</td></tr><tr><td><font color="Sienna">Sienna</font></td><td><font color="#A0522D">#A0522D</font></td><td bgcolor="#A0522D">rgb(160, 82, 45)</td></tr><tr><td><font color="Silver">Silver</font></td><td><font color="#C0C0C0">#C0C0C0</font></td><td bgcolor="#C0C0C0">rgb(192, 192, 192)</td></tr><tr><td><font color="SkyBlue">SkyBlue</font></td><td><font color="#87CEEB">#87CEEB</font></td><td bgcolor="#87CEEB">rgb(135, 206, 235)</td></tr><tr><td><font color="SlateBlue">SlateBlue</font></td><td><font color="#6A5ACD">#6A5ACD</font></td><td bgcolor="#6A5ACD">rgb(106, 90, 205)</td></tr><tr><td><font color="SlateGray">SlateGray</font></td><td><font color="#708090">#708090</font></td><td bgcolor="#708090">rgb(112, 128, 144)</td></tr><tr><td><font color="Snow">Snow</font></td><td><font color="#FFFAFA">#FFFAFA</font></td><td bgcolor="#FFFAFA">rgb(255, 250, 250)</td></tr><tr><td><font color="SpringGreen">SpringGreen</font></td><td><font color="#00FF7F">#00FF7F</font></td><td bgcolor="#00FF7F">rgb(0, 255, 127)</td></tr><tr><td><font color="SteelBlue">SteelBlue</font></td><td><font color="#4682B4">#4682B4</font></td><td bgcolor="#4682B4">rgb(70, 130, 180)</td></tr><tr><td><font color="Tan">Tan</font></td><td><font color="#D2B48C">#D2B48C</font></td><td bgcolor="#D2B48C">rgb(210, 180, 140)</td></tr><tr><td><font color="Teal">Teal</font></td><td><font color="#008080">#008080</font></td><td bgcolor="#008080">rgb(0, 128, 128)</td></tr><tr><td><font color="Thistle">Thistle</font></td><td><font color="#D8BFD8">#D8BFD8</font></td><td bgcolor="#D8BFD8">rgb(216, 191, 216)</td></tr><tr><td><font color="Tomato">Tomato</font></td><td><font color="#FF6347">#FF6347</font></td><td bgcolor="#FF6347">rgb(255, 99, 71)</td></tr><tr><td><font color="Turquoise">Turquoise</font></td><td><font color="#40E0D0">#40E0D0</font></td><td bgcolor="#40E0D0">rgb(64, 224, 208)</td></tr><tr><td><font color="Violet">Violet</font></td><td><font color="#EE82EE">#EE82EE</font></td><td bgcolor="#EE82EE">rgb(238, 130, 238)</td></tr><tr><td><font color="VioletRed">VioletRed</font></td><td><font color="#D02090">#D02090</font></td><td bgcolor="#D02090">rgb(208, 32, 144)</td></tr><tr><td><font color="Wheat">Wheat</font></td><td><font color="#F5DEB3">#F5DEB3</font></td><td bgcolor="#F5DEB3">rgb(245, 222, 179)</td></tr><tr><td><font color="White">White</font></td><td><font color="#FFFFFF">#FFFFFF</font></td><td bgcolor="#FFFFFF">rgb(255, 255, 255)</td></tr><tr><td><font color="WhiteSmoke">WhiteSmoke</font></td><td><font color="#F5F5F5">#F5F5F5</font></td><td bgcolor="#F5F5F5">rgb(245, 245, 245)</td></tr><tr><td><font color="Yellow">Yellow</font></td><td><font color="#FFFF00">#FFFF00</font></td><td bgcolor="#FFFF00">rgb(255, 255, 0)</td></tr><tr><td><font color="YellowGreen">YellowGreen</font></td><td><font color="#9ACD32">#9ACD32</font></td><td bgcolor="#9ACD32">rgb(154, 205, 50)</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;qquad-qquad-qquad-MarkDown-语法&quot;&gt;&lt;a href=&quot;#qquad-qquad-qquad-MarkDown-语法&quot; class=&quot;headerlink&quot; title=&quot;$\qquad\qquad\qquad$ MarkDown 语法&quot;&gt;</summary>
      
    
    
    
    <category term="MarkDown" scheme="http://example.com/categories/MarkDown/"/>
    
    
    <category term="MarkDown" scheme="http://example.com/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github 博客搭建简略记录</title>
    <link href="http://example.com/2022/09/16/blog/"/>
    <id>http://example.com/2022/09/16/blog/</id>
    <published>2022-09-15T16:00:00.000Z</published>
    <updated>2022-09-30T00:36:15.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="qquad-qquad-qquad-blog搭建详解"><a href="#qquad-qquad-qquad-blog搭建详解" class="headerlink" title="$\qquad\qquad\qquad$ blog搭建详解"></a>$\qquad\qquad\qquad$ blog搭建详解</br></h1><ul><li><a href="#qquadqquadqquad-blog%E6%90%AD%E5%BB%BA%E8%AF%A6%E8%A7%A3br">$\qquad\qquad\qquad$ blog搭建详解</br></a></li><li><a href="#%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE">相关环境的配置</a></li><li><a href="#%E5%85%B3%E8%81%94github%E7%9A%84ssh%E5%AF%86%E9%92%A5">关联Github的SSH密钥</a></li><li><a href="#%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%94%B9%E4%B8%8E%E9%85%8D%E7%BD%AE">主题更改与配置</a><ul><li><a href="#hexo%E5%90%AF%E5%8A%A8%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BAextends-includeslayoutpug-block-content-include-includesrecent-postspug-include">Hexo启动页面显示extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include</a></li></ul></li><li><a href="#front-matter">Front-matter</a></li><li><a href="#%E9%AB%98%E4%BA%AE%E4%BB%A3%E7%A0%81">高亮代码</a></li><li><a href="#%E7%9C%8B%E6%9D%BF%E5%A8%98">看板娘</a></li><li><a href="#%E9%A1%B5%E9%9D%A2%E7%9A%84markdown%E6%96%87%E7%AB%A0%E7%9A%84%E5%BC%80%E5%A4%B4">页面的MarkDown文章的开头</a></li></ul><h1 id="相关环境的配置"><a href="#相关环境的配置" class="headerlink" title="相关环境的配置"></a>相关环境的配置</h1><font face="微软雅黑" size=3 color=#F08080 >环境配置都是在命令行管理的管理员模式下配置的。</font><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org <span class="comment"># 切换淘宝镜像源</span></span><br><span class="line">cnpm -v</span><br><span class="line">cnpm install -g hexo-cli <span class="comment">#安装hexo的脚手架，该项目要在hexo init之前进行</span></span><br><span class="line">hexo init <span class="comment">#初始化hexo博客</span></span><br><span class="line">cnpm install hexo-deployer-git --save <span class="comment">#安装git的工具包，方便之后进行 hexo d </span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >安装好脚手架之后，无法在原始的文件夹中继续安装hexo init,需要在根目录文件夹中新建另外一个文件夹，在这里作为hexo博客的根目录。</font><p><img src="https://conanmusk-blog-image.oss-cn-nanjing.aliyuncs.com/img/202209190918515.png" alt="hexo-cli"></p><p><img src="https://conanmusk-blog-image.oss-cn-nanjing.aliyuncs.com/img/202209190929643.jpg" alt="hexo init"></p><h1 id="关联Github的SSH密钥"><a href="#关联Github的SSH密钥" class="headerlink" title="关联Github的SSH密钥"></a>关联Github的SSH密钥</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >在博客目录下，通过git bush，得到SSH密钥，一般其地址都默认在C:\Users\Dell\.ssh。将其中的密钥粘贴至Github。</font><p><img src="https://conanmusk-blog-image.oss-cn-nanjing.aliyuncs.com/img/202209190929870.png" alt="SSH"></p><font face="微软雅黑" size=3 color=#F08080 >在此过程中可能会设置密码(passphrase),我设置为了200124.</font><p><a href="https://conanmusk.github.io/">博客地址</a></p><font face="微软雅黑" size=3 color=#F08080 >C:\Users\Dell\.ssh，在以上目录使用命令行或者git bush 验证是否连上github。</font><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h1 id="主题更改与配置"><a href="#主题更改与配置" class="headerlink" title="主题更改与配置"></a>主题更改与配置</h1><p><a href="https://butterfly.js.org/">我使用的主题安装介绍</a></p><h2 id="Hexo启动页面显示extends-includes-x2F-layout-pug-block-content-include-includes-x2F-recent-posts-pug-include"><a href="#Hexo启动页面显示extends-includes-x2F-layout-pug-block-content-include-includes-x2F-recent-posts-pug-include" class="headerlink" title="Hexo启动页面显示extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include"></a>Hexo启动页面显示extends includes&#x2F;layout.pug block content include includes&#x2F;recent-posts.pug include</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://conanmusk-blog-image.oss-cn-nanjing.aliyuncs.com/img/202209190929878.png" alt="在此处修改为你想要使用的那个主题的文件包"></p><font face="微软雅黑" size=3 color=#F08080 >在hexo文件的_config.yml文件中，按照上图修改主题名称。做好上面的一切之后，便有了一个功能完备但是不太美观的博客。修改为你下载的主题包的名称。</font><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p><a href="https://hexo.io/zh-cn/docs/front-matter">Hexo官方解释</a></p><p><a href="https://kyori.xyz/2021/07/081100.html">主题开源者解释使用方法</a></p><h1 id="高亮代码"><a href="#高亮代码" class="headerlink" title="高亮代码"></a>高亮代码</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">theme :</span> <span class="string">atom-one-dark</span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >在博客目录下的_config.yml文件中修改</font><h1 id="看板娘"><a href="#看板娘" class="headerlink" title="看板娘"></a>看板娘</h1><p><a href="https://blog.csdn.net/weixin_44517301/article/details/106348887?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166333156616800182118517%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=166333156616800182118517&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-106348887-null-null.142%5Ev47%5Econtrol_1,201%5Ev3%5Econtrol_2&utm_term=hexo%E7%9C%8B%E6%9D%BF%E5%A8%98&spm=1018.2226.3001.4187">Live 2D添加</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-helper-live2d </span><br><span class="line">cnpm install live2d-widget-model-shizuku(最后面是模型的人物名称，可修改)</span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >完成以上下载与安装之后，即可在博客的主——config.yml文件中添加下面的代码。</font><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Live2D看板娘</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="comment">#模板目录，在node_modules里</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span>  </span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">300</span> </span><br><span class="line">    <span class="attr">height:</span> <span class="number">600</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="comment"># 在手机端显示</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>   </span><br><span class="line">  <span class="attr">rect:</span></span><br><span class="line">    <span class="string">opacity:0.7</span></span><br></pre></td></tr></table></figure><h1 id="页面的MarkDown文章的开头"><a href="#页面的MarkDown文章的开头" class="headerlink" title="页面的MarkDown文章的开头"></a>页面的MarkDown文章的开头</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">插入图片，音频和视频</span> <span class="string">(文章的名字)</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-07-08 10:10:30</span> <span class="string">(时间)</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">&#x27;doc&#x27;</span>]       <span class="string">(分类)</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">&#x27;doc&#x27;</span>, <span class="string">&#x27;flex-block&#x27;</span>] <span class="string">(标签)</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">https://cloud.miiiku.xyz/src/images/cover/cover-02.jpg-webp</span> <span class="string">(页面的图片背景)</span></span><br><span class="line"><span class="comment">#(一下的两个设置为false一般)</span></span><br><span class="line"><span class="attr">aplayer:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">dplayer:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;qquad-qquad-qquad-blog搭建详解&quot;&gt;&lt;a href=&quot;#qquad-qquad-qquad-blog搭建详解&quot; class=&quot;headerlink&quot; title=&quot;$\qquad\qquad\qquad$ blog搭建详解&quot;&gt;&lt;/a&gt;$\qqu</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Markdown" scheme="http://example.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>links</title>
    <link href="http://example.com/2022/09/15/links/"/>
    <id>http://example.com/2022/09/15/links/</id>
    <published>2022-09-15T08:11:58.000Z</published>
    <updated>2022-09-15T08:46:12.408Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>STM32Code</title>
    <link href="http://example.com/2021/07/07/STM32Code/"/>
    <id>http://example.com/2021/07/07/STM32Code/</id>
    <published>2021-07-07T12:42:40.000Z</published>
    <updated>2022-10-02T10:30:07.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="STM32-Hal-Code"><a href="#STM32-Hal-Code" class="headerlink" title="STM32_Hal_Code"></a>STM32_Hal_Code</br></h1><ul><li><a href="#stm32_hal_codebr">STM32_Hal_Code</br></a></li><li><a href="#main%E5%A4%B4%E6%96%87%E4%BB%B6">Main头文件</a></li><li><a href="#led%E4%BD%BF%E7%94%A8%E4%BD%8D%E5%B8%A6%E6%93%8D%E4%BD%9C">LED(使用位带操作)</a><ul><li><a href="#%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6%E5%AE%8C%E6%88%90%E4%BD%8D%E5%B8%A6%E6%93%8D%E4%BD%9C%E8%B5%8B%E5%80%BC">三目运算符完成位带操作赋值</a></li></ul></li><li><a href="#key">KEY</a></li><li><a href="#%E4%B8%AD%E6%96%AD%E4%BC%98%E5%85%88%E7%BA%A7%E7%AE%A1%E7%90%86">中断优先级管理</a></li><li><a href="#%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD">外部中断</a></li><li><a href="#%E4%B8%B2%E5%8F%A3">串口</a><ul><li><a href="#usart%E5%BC%95%E8%84%9A%E7%8A%B6%E6%80%81">usart引脚状态</a></li><li><a href="#usartc%E6%96%87%E4%BB%B6">usart.c文件</a></li><li><a href="#usartc%E6%96%87%E4%BB%B6h743">usart.c文件（h743）</a></li><li><a href="#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0">回调函数</a></li><li><a href="#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0h743">回调函数（h743）</a></li><li><a href="#usarth%E6%96%87%E4%BB%B6">usart.h文件</a></li><li><a href="#usarth%E6%96%87%E4%BB%B6h743">usart.h文件(h743)</a></li><li><a href="#%E6%89%93%E5%BC%80%E4%B8%B2%E5%8F%A3%E6%8E%A5%E6%94%B6%E4%B8%AD%E6%96%AD">打开串口接收中断</a></li><li><a href="#%E9%A9%B1%E5%8A%A8%E5%87%BD%E6%95%B0h743">驱动函数（H743）</a></li><li><a href="#u3_printf%E5%87%BD%E6%95%B0%E7%BC%96%E5%86%99%E7%8B%AC%E7%AB%8B%E7%9A%84%E4%B8%B2%E5%8F%A3%E5%8F%91%E9%80%81%E5%87%BD%E6%95%B0%E4%B8%8D%E7%94%A8printf%E4%B9%9F%E8%A1%8C">u3_printf函数编写（独立的串口发送函数，不用printf也行）</a></li><li><a href="#%E4%B8%B2%E5%8F%A3%E7%82%B9%E7%81%AF%E7%A8%8B%E5%BA%8F">串口点灯程序</a></li></ul></li><li><a href="#%E4%B8%B2%E5%8F%A3%E5%B1%8F%E4%BD%BF%E7%94%A8">串口屏使用</a></li><li><a href="#%E5%AE%9A%E6%97%B6%E5%99%A8">定时器</a><ul><li><a href="#%E5%AE%9A%E6%97%B6%E5%99%A8%E4%B8%AD%E6%96%AD">定时器中断</a><ul><li><a href="#%E5%BC%80%E5%90%AF%E5%AE%9A%E6%97%B6%E5%99%A8">开启定时器</a></li><li><a href="#%E5%AE%9A%E6%97%B6%E5%99%A8%E7%9A%84%E4%B8%AD%E6%96%AD%E6%A0%87%E5%BF%97%E7%9A%84%E5%87%BD%E6%95%B0">定时器的中断标志的函数</a></li><li><a href="#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0-1">回调函数</a></li><li><a href="#pwm%E8%BE%93%E5%87%BA">PWM输出</a><ul><li><a href="#pwm%E6%A8%A1%E5%BC%8F">PWM模式</a></li><li><a href="#ccrx%E5%AF%B9%E5%BA%94pulse">CCRX(对应Pulse)</a></li><li><a href="#ch-porlarity">CH Porlarity</a></li><li><a href="#%E6%94%B9%E5%8F%98ccrx%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0">改变CCRX值的函数</a></li><li><a href="#stm32%E8%87%AA%E5%B8%A6%E7%9A%84%E6%94%B9%E5%8F%98ccrx%E7%9A%84%E5%87%BD%E6%95%B0">stm32自带的改变CCRX的函数</a></li><li><a href="#%E5%90%AF%E5%8A%A8pwm%E8%BE%93%E5%87%BA">启动PWM输出</a></li><li><a href="#pwm%E8%BE%93%E5%87%BA%E9%A2%91%E7%8E%87%E8%AE%A1%E7%AE%97">PWM输出频率计算</a></li><li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li></ul></li><li><a href="#pwm%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7%E6%B5%8B%E9%87%8F%E9%A2%91%E7%8E%87%E5%8D%A0%E7%A9%BA%E6%AF%94%E9%AB%98%E7%94%B5%E5%B9%B3">PWM输入捕获测量频率、占空比、高电平</a><ul><li><a href="#timc%E6%96%87%E4%BB%B6">tim.c文件</a></li><li><a href="#timh%E6%96%87%E4%BB%B6">tim.h文件</a></li><li><a href="#mainc%E6%96%87%E4%BB%B6">main.c文件</a></li><li><a href="#%E9%A9%B1%E5%8A%A8%E6%96%87%E4%BB%B6c%E5%86%99%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E4%B8%AD%E6%96%AD%E5%87%BD%E6%95%B0%E9%87%8C%E9%9D%A2">驱动文件（C）（写到对应的中断函数里面）</a></li><li><a href="#%E6%89%93%E5%BC%80%E6%8D%95%E8%8E%B7%E4%B8%AD%E6%96%AD">打开捕获中断</a></li></ul></li><li><a href="#oled%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8">OLED模块使用</a><ul><li><a href="#main%E5%A4%B4%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB">Main头文件包含</a></li><li><a href="#%E5%88%9D%E5%A7%8B%E5%8C%96">初始化</a></li><li><a href="#oled%E6%98%BE%E7%A4%BA%E5%87%BD%E6%95%B0">OLED显示函数</a></li><li><a href="#%E6%8E%A5%E7%BA%BF">接线</a></li></ul></li><li><a href="#8x8%E7%9F%A9%E9%98%B5%E9%94%AE%E7%9B%98">8x8矩阵键盘</a></li><li><a href="#lcd%E5%B1%8F%E5%B9%95%E9%A9%B1%E5%8A%A8%E7%A7%BB%E6%A4%8D">LCD屏幕驱动移植</a></li><li><a href="#adc">ADC</a></li><li><a href="#fft">FFT</a><ul><li><a href="#dma">DMA</a></li></ul></li></ul></li></ul></li></ul><h1 id="Main头文件"><a href="#Main头文件" class="headerlink" title="Main头文件"></a>Main头文件</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;gui.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;arm_math.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;arm_const_structs.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;math.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dds_init.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;task_manage.h&quot;</span></span></span><br></pre></td></tr></table></figure><h1 id="LED-使用位带操作"><a href="#LED-使用位带操作" class="headerlink" title="LED(使用位带操作)"></a>LED(使用位带操作)</h1><p>低电平点亮，注意初始化时要将电平拉高</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _LED0_ PFout(9)<span class="comment">//此处使用了自己的sys文件里面的位操作指令</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _LED1_ PFout(10)</span></span><br></pre></td></tr></table></figure><h2 id="三目运算符完成位带操作赋值"><a href="#三目运算符完成位带操作赋值" class="headerlink" title="三目运算符完成位带操作赋值"></a>三目运算符完成位带操作赋值</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LED0(n) (n ? HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET) : HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_SET))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1(n) (n ? HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_RESET) : HAL_GPIO_WritePin(LED1_GPIO_Port, LED1_Pin, GPIO_PIN_SET))</span></span><br></pre></td></tr></table></figure><h1 id="KEY"><a href="#KEY" class="headerlink" title="KEY"></a>KEY</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _KEY0_ PEin(4)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _WAK_UP_ PAin(0)</span></span><br></pre></td></tr></table></figure><p>上拉之后，对应GPIO口为0说明按键按下；下拉之后，GPIO口电位为1说明是按键按下。</p><font face="微软雅黑" size=3 color=#F08080 ><br>按键处理函数<br>返回按键值<br>mode:0,不支持连续按;<br>1,支持连续按;<br>0，没有任何按键按下<br>1，WKUP按下 WK_UP<br>注意此函数有响应优先级,KEY0>KEY1>KEY2>WK_UP!!</br></font><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> u8 key_up=<span class="number">1</span>;     <span class="comment">//按键松开标志</span></span><br><span class="line">    <span class="keyword">if</span>(mode==<span class="number">1</span>)key_up=<span class="number">1</span>;    <span class="comment">//支持连按</span></span><br><span class="line">    <span class="keyword">if</span>(key_up&amp;&amp;(_KEY1_== <span class="number">0</span>||_KEY2_ == <span class="number">0</span>|| _WAKE_UP_ ==<span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        key_up=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(_KEY1_==<span class="number">0</span>)       <span class="keyword">return</span> KEY1_PRES;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(_KEY2_ ==<span class="number">0</span>) <span class="keyword">return</span> KEY2_PRES;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(_WAKE_UP_==<span class="number">1</span>) <span class="keyword">return</span> WKUP_PRES;          </span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(_KEY1_==<span class="number">1</span>&amp;&amp;_WAKE_UP_==<span class="number">0</span>&amp;&amp;_KEY2_==<span class="number">1</span>)key_up=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   <span class="comment">//无按键按下</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >按键的H文件的程序，通过类似位带操作，实现便捷的赋值或者判断。</font><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _KEY1_ HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _KEY2_ HAL_GPIO_ReadPin(KEY2_GPIO_Port, KEY2_Pin)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _WAKE_UP_ HAL_GPIO_ReadPin(WAKE_UP_GPIO_Port, WAKE_UP_Pin)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY1_PRES 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY2_PRES 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WKUP_PRES   3</span></span><br></pre></td></tr></table></figure><font face="微软雅黑" size=3 color=#F08080 >功能类似使用switch case 语句</font><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">基于switch语句的按键和led</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">key_flag = KEY_Scan(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE END WHILE */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* USER CODE BEGIN 3 */</span></span><br><span class="line"><span class="keyword">switch</span>(key_flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> KEY1_PRES:</span><br><span class="line">LED0(<span class="number">0</span>);</span><br><span class="line">LED1(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> KEY2_PRES:</span><br><span class="line">LED0(<span class="number">1</span>);</span><br><span class="line">LED1(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WKUP_PRES:</span><br><span class="line">HAL_GPIO_TogglePin(LED0_GPIO_Port,LED0_Pin);</span><br><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="中断优先级管理"><a href="#中断优先级管理" class="headerlink" title="中断优先级管理"></a>中断优先级管理</h1><font face="微软雅黑" size=3 color=#F08080 ><br>抢占优先级相同，响应优先级高的先执行。<br>响应优先级高的，看抢占优先级，高的可以抢占低的。<br>越小越高</br></font><h1 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h1><font face="微软雅黑" size=3 color=#F08080 ><br>放置中断的回调函数，可以通过case语句判断多个中断是那个引脚产生的。<br>中断函数就放置在stm32f1xx_it.c中，放置就行，不用再次声明。<br>中断回调函数，多个外部中断产生，通过switch语句判断是那个触发的中断。<br>关于设置中断触发的条件，原始的输入引脚是上拉，就改为下降沿触发。</br></font><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*外部中断的回调函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HAL_GPIO_EXTI_Callback</span><span class="params">(<span class="type">uint16_t</span> GPIO_Pin)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">delay_ms</span>(<span class="number">100</span>);      <span class="comment">//消抖</span></span><br><span class="line">    <span class="keyword">switch</span>(GPIO_Pin)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_0:</span><br><span class="line">        <span class="comment">//这里的GPIO_PIN_0可能不一定是PA0但是，下面的判断语句可以准确指向PA0</span></span><br><span class="line">            <span class="keyword">if</span>(_WAK_UP_==<span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">_LED1_=!_LED1_;</span><br><span class="line">               __HAL_GPIO_EXTI_CLEAR_IT(GPIO_PIN_0);<span class="comment">//清除中断标志位</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GPIO_PIN_4:</span><br><span class="line">            <span class="keyword">if</span>(_KEY0_==<span class="number">1</span>)  </span><br><span class="line">            &#123;</span><br><span class="line">_LED0_=!_LED0_;<span class="comment">//控制LED0翻转</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h1><h2 id="usart引脚状态"><a href="#usart引脚状态" class="headerlink" title="usart引脚状态"></a>usart引脚状态</h2>  <font face="微软雅黑" size=3 color=#F08080 >  <br>一般都还是上拉状态。  </br>  </font><h2 id="usart-c文件"><a href="#usart-c文件" class="headerlink" title="usart.c文件"></a>usart.c文件</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">__FILE</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">USART1-&gt;DR = (u8) ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line">u8 USART_RX_BUF[USART_REC_LEN];     <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.</span></span><br><span class="line"><span class="comment">//接收状态</span></span><br><span class="line"><span class="comment">//bit15，接收完成标志</span></span><br><span class="line"><span class="comment">//bit14，接收到0x0d</span></span><br><span class="line"><span class="comment">//bit13~0，接收到的有效字节数目</span></span><br><span class="line">u16 USART_RX_STA=<span class="number">0</span>;       <span class="comment">//接收状态标记</span></span><br><span class="line">u8 aRxBuffer[RXBUFFERSIZE];<span class="comment">//HAL库使用的串口接收缓冲</span></span><br><span class="line">u8 USART2_TX_BUF[USART2_MAX_SEND_LEN]; <span class="comment">//发送缓冲,最大USART3_MAX_SEND_LEN字节</span></span><br></pre></td></tr></table></figure><h2 id="usart-c文件（h743）"><a href="#usart-c文件（h743）" class="headerlink" title="usart.c文件（h743）"></a>usart.c文件（h743）</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="comment">//#pragma import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">__FILE</span> </span><br><span class="line">&#123; </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;ISR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">USART1-&gt;TDR=(u8)ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> EN_USART1_RX   <span class="comment">//如果使能了接收</span></span></span><br><span class="line"><span class="comment">//串口1中断服务程序</span></span><br><span class="line"><span class="comment">//注意,读取USARTx-&gt;SR能避免莫名其妙的错误   </span></span><br><span class="line">u8 USART_RX_BUF[USART_REC_LEN];     <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.</span></span><br><span class="line"><span class="comment">//接收状态</span></span><br><span class="line"><span class="comment">//bit15，接收完成标志</span></span><br><span class="line"><span class="comment">//bit14，接收到0x0d</span></span><br><span class="line"><span class="comment">//bit13~0，接收到的有效字节数目</span></span><br><span class="line">u16 USART_RX_STA=<span class="number">0</span>;       <span class="comment">//接收状态标记</span></span><br><span class="line">u8 USART2_TX_BUF[USART2_MAX_SEND_LEN]; <span class="comment">//发送缓冲,最大USART3_MAX_SEND_LEN字节</span></span><br><span class="line">u8 aRxBuffer[RXBUFFERSIZE];<span class="comment">//HAL库使用的串口接收缓冲</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2>  <font face="微软雅黑" size=3 color=#F08080 >  <br>该函数一般放置在usart.c文件中即可  </br>  </font> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(huart-&gt;Instance==USART1)<span class="comment">//如果是串口1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((USART_RX_STA&amp;<span class="number">0x8000</span>)==<span class="number">0</span>)<span class="comment">//接收未完成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x4000</span>)<span class="comment">//接收到了0x0d</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(aRxBuffer[<span class="number">0</span>]!=<span class="number">0x0a</span>)USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收错误,重新开始</span></span><br><span class="line"><span class="keyword">else</span> USART_RX_STA|=<span class="number">0x8000</span>;<span class="comment">//接收完成了 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//还没收到0X0D</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(aRxBuffer[<span class="number">0</span>]==<span class="number">0x0d</span>)USART_RX_STA|=<span class="number">0x4000</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">USART_RX_BUF[USART_RX_STA&amp;<span class="number">0X3FFF</span>]=aRxBuffer[<span class="number">0</span>] ;</span><br><span class="line">USART_RX_STA++;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&gt;(USART_REC_LEN<span class="number">-1</span>))USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收数据错误,重新开始接收  </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回调函数（h743）"><a href="#回调函数（h743）" class="headerlink" title="回调函数（h743）"></a>回调函数（h743）</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">HAL_UART_RxCpltCallback</span><span class="params">(UART_HandleTypeDef *huart)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(huart-&gt;Instance==USART1)<span class="comment">//如果是串口1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((USART_RX_STA&amp;<span class="number">0x8000</span>)==<span class="number">0</span>)<span class="comment">//接收未完成</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x4000</span>)<span class="comment">//接收到了0x0d</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(aRxBuffer[<span class="number">0</span>]!=<span class="number">0x0a</span>)USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收错误,重新开始</span></span><br><span class="line"><span class="keyword">else</span> USART_RX_STA|=<span class="number">0x8000</span>;<span class="comment">//接收完成了 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//还没收到0X0D</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(aRxBuffer[<span class="number">0</span>]==<span class="number">0x0d</span>)USART_RX_STA|=<span class="number">0x4000</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">USART_RX_BUF[USART_RX_STA&amp;<span class="number">0X3FFF</span>]=aRxBuffer[<span class="number">0</span>] ;</span><br><span class="line">USART_RX_STA++;</span><br><span class="line"><span class="keyword">if</span>(USART_RX_STA&gt;(USART_REC_LEN<span class="number">-1</span>))USART_RX_STA=<span class="number">0</span>;<span class="comment">//接收数据错误,重新开始接收  </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="usart-h文件"><a href="#usart-h文件" class="headerlink" title="usart.h文件"></a>usart.h文件</h2><p>  放到&#x2F;* USER CODE BEGIN Private defines <em>&#x2F;里面，不是&#x2F;</em> USER CODE BEGIN Includes *&#x2F;</p>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> USART_REC_LEN  200  <span class="comment">//定义最大接收字节数 200  </span></span></span><br><span class="line"><span class="keyword">extern</span> u8  USART_RX_BUF[USART_REC_LEN]; <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 </span></span><br><span class="line"><span class="keyword">extern</span> u16 USART_RX_STA;         <span class="comment">//接收状态标记</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RXBUFFERSIZE   1 <span class="comment">//缓存大小</span></span></span><br><span class="line"><span class="keyword">extern</span> u8 aRxBuffer[RXBUFFERSIZE];<span class="comment">//HAL库USART接收Buffer</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART2_MAX_SEND_LEN400<span class="comment">//最大发送缓存字节数</span></span></span><br></pre></td></tr></table></figure><h2 id="usart-h文件-h743"><a href="#usart-h文件-h743" class="headerlink" title="usart.h文件(h743)"></a>usart.h文件(h743)</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> EN_USART1_RX 1<span class="comment">//使能（1）/禁止（0）串口1接收</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USART_REC_LEN  200  <span class="comment">//定义最大接收字节数 200  </span></span></span><br><span class="line"><span class="keyword">extern</span> u8  USART_RX_BUF[USART_REC_LEN]; <span class="comment">//接收缓冲,最大USART_REC_LEN个字节.末字节为换行符 </span></span><br><span class="line"><span class="keyword">extern</span> u16 USART_RX_STA;         <span class="comment">//接收状态标记</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RXBUFFERSIZE   1 <span class="comment">//缓存大小</span></span></span><br><span class="line"><span class="keyword">extern</span> u8 aRxBuffer[RXBUFFERSIZE];<span class="comment">//HAL库USART接收Buffer</span></span><br></pre></td></tr></table></figure><h2 id="打开串口接收中断"><a href="#打开串口接收中断" class="headerlink" title="打开串口接收中断"></a>打开串口接收中断</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">HAL_UART_Receive_IT</span>(&amp;huart1 , (u8 *)aRxBuffer, RXBUFFERSIZE);<span class="comment">//该函数会开启接收中断</span></span><br></pre></td></tr></table></figure>  <font face="微软雅黑" size=3 color=#F08080 >  <br>以上的配置之后，可以调用printf函数显示，但是接收中断的使用需要在Cubemax打开串口的中断，并且配置驱动文件。  <br>将下面的代码加入到串口的中断程序中去,并且添加#include “usart.h”到驱动文件头文件路径。  </br>  </font>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">u32 timeout=<span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//使用OS</span></span></span><br><span class="line"><span class="built_in">OSIntEnter</span>();    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">HAL_UART_IRQHandler</span>(&amp;huart1);<span class="comment">//调用HAL库中断处理公用函数</span></span><br><span class="line"></span><br><span class="line">timeout=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">HAL_UART_GetState</span>(&amp;huart1) != HAL_UART_STATE_READY)<span class="comment">//等待就绪</span></span><br><span class="line">&#123;</span><br><span class="line"> timeout++;<span class="comment">////超时处理</span></span><br><span class="line">     <span class="keyword">if</span>(timeout&gt;HAL_MAX_DELAY) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">     </span><br><span class="line">timeout=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">HAL_UART_Receive_IT</span>(&amp;huart1, (u8 *)aRxBuffer, RXBUFFERSIZE) != HAL_OK)<span class="comment">//一次处理完成之后，重新开启中断并设置RxXferCount为1</span></span><br><span class="line">&#123;</span><br><span class="line"> timeout++; <span class="comment">//超时处理</span></span><br><span class="line"> <span class="keyword">if</span>(timeout&gt;HAL_MAX_DELAY) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//使用OS</span></span></span><br><span class="line"><span class="built_in">OSIntExit</span>();   </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="驱动函数（H743）"><a href="#驱动函数（H743）" class="headerlink" title="驱动函数（H743）"></a>驱动函数（H743）</h2>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  u32 timeout=<span class="number">0</span>;</span><br><span class="line">    u32 maxDelay=<span class="number">0x1FFFF</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//使用OS</span></span></span><br><span class="line">  OSIntEnter();    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  </span><br><span class="line">  HAL_UART_IRQHandler(&amp;huart1);<span class="comment">//调用HAL库中断处理公用函数</span></span><br><span class="line">  </span><br><span class="line">  timeout=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (HAL_UART_GetState(&amp;huart1)!=HAL_UART_STATE_READY)<span class="comment">//等待就绪</span></span><br><span class="line">  &#123;</span><br><span class="line">        timeout++;<span class="comment">////超时处理</span></span><br><span class="line">        <span class="keyword">if</span>(timeout&gt;maxDelay) <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  timeout=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(HAL_UART_Receive_IT(&amp;huart1,(u8 *)aRxBuffer, RXBUFFERSIZE)!=HAL_OK)<span class="comment">//一次处理完成之后，重新开启中断并设置RxXferCount为1</span></span><br><span class="line">  &#123;</span><br><span class="line">        timeout++; <span class="comment">//超时处理</span></span><br><span class="line">        <span class="keyword">if</span>(timeout&gt;maxDelay) <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYSTEM_SUPPORT_OS <span class="comment">//使用OS</span></span></span><br><span class="line">  OSIntExit();   </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="u3-printf函数编写（独立的串口发送函数，不用printf也行）"><a href="#u3-printf函数编写（独立的串口发送函数，不用printf也行）" class="headerlink" title="u3_printf函数编写（独立的串口发送函数，不用printf也行）"></a>u3_printf函数编写（独立的串口发送函数，不用printf也行）</h2>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//串口2,printf 函数</span></span><br><span class="line"><span class="comment">//确保一次发送数据不超过USART3_MAX_SEND_LEN字节</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">u2_printf</span><span class="params">(<span class="type">char</span>* fmt,...)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">u16 i,j;</span><br><span class="line">va_list ap;</span><br><span class="line"><span class="built_in">va_start</span>(ap,fmt);</span><br><span class="line"><span class="built_in">vsprintf</span>((<span class="type">char</span>*)USART2_TX_BUF,fmt,ap);</span><br><span class="line"><span class="built_in">va_end</span>(ap);</span><br><span class="line">i=<span class="built_in">strlen</span>((<span class="type">const</span> <span class="type">char</span>*)USART2_TX_BUF);<span class="comment">//此次发送数据的长度</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)<span class="comment">//循环发送数据</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>((USART2-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">USART2-&gt;DR=USART2_TX_BUF[j];  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <font face="微软雅黑" size=3 color=#F08080 >  <br> 使用上面的函数之前要包含一下的头文件包。  <br>  注意更改串口时记得更改huart1改为对应串口的  <br>测试是否成功时要看是否接对了GPIO口  </br>  </font>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="串口点灯程序"><a href="#串口点灯程序" class="headerlink" title="串口点灯程序"></a>串口点灯程序</h2>  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(USART_RX_STA&amp;<span class="number">0x8000</span>)</span><br><span class="line">&#123;   </span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span> *)USART_RX_BUF,<span class="string">&quot;LEDff&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">LED(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strcmp</span>((<span class="type">const</span> <span class="type">char</span>*)USART_RX_BUF,<span class="string">&quot;LEDon&quot;</span>)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">USART_RX_STA=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(USART_RX_BUF,<span class="number">0</span>,<span class="keyword">sizeof</span> USART_RX_BUF); <span class="comment">//去除变量中的残留数值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  <font face="微软雅黑" size=3 color=#F08080 >  <br> 发送给串口的一定是16进制的，不能直接LED0n 0d 0a。  <br>  应该是LEDon 0d 0a对应的16进制数。  <br>4C 45 44 6F 6E 0D 0A（对应LEDon 0d 0a）。  </br>  </font><h1 id="串口屏使用"><a href="#串口屏使用" class="headerlink" title="串口屏使用"></a>串口屏使用</h1><ul><li>常用指令<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加数据进去</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;add 3,0,123\xff\xff\xff&quot;</span>);<span class="comment">//反斜杠表示后面的三个0XFF</span></span><br><span class="line"><span class="comment">//清除波形数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cle 3,0\xff\xff\xff&quot;</span>);</span><br><span class="line"><span class="comment">//翻页指令</span></span><br><span class="line">page page1（后面是页面的名字）</span><br><span class="line"><span class="comment">//串口屏的波特率设置</span></span><br><span class="line">baud=<span class="number">115200</span></span><br><span class="line"><span class="comment">//串口屏发送16进制</span></span><br><span class="line">printh <span class="number">4</span>C <span class="number">45</span> <span class="number">44</span> <span class="number">66</span> <span class="number">66</span> <span class="number">0</span>D <span class="number">0</span>A</span><br><span class="line"> <span class="comment">//改变文本控件内容</span></span><br><span class="line"> t0.txt=<span class="string">&quot;vs:100&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h1>  <font face="微软雅黑" size=3 color=#F08080 >  <br> 注意使用F4参考手册查找定时器对应的APB总线  <br>TIM_GetCapture1（）；获取定时器当前值  <br>TIM_SetCounter(TIM5, 0); *//将当前计数器的值CNT设置成0*、  <br>__HAL_TIM_DISABLE(&htim5);      //关闭定时器5  <br>__HAL_TIM_SET_COUNTER(&htim5,0);  <br>__HAL_TIM_ENABLE(&htim5);//使能定时器5  </br>  </font><h2 id="定时器中断"><a href="#定时器中断" class="headerlink" title="定时器中断"></a>定时器中断</h2><h3 id="开启定时器"><a href="#开启定时器" class="headerlink" title="开启定时器"></a>开启定时器</h3><pre><code> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*开启定时器*/</span></span><br><span class="line"><span class="built_in">HAL_TIM_Base_Start_IT</span>(&amp;htim2);</span><br><span class="line"><span class="built_in">HAL_TIM_Base_Start_IT</span>(&amp;htim9);</span><br></pre></td></tr></table></figure></code></pre><h3 id="定时器的中断标志的函数"><a href="#定时器的中断标志的函数" class="headerlink" title="定时器的中断标志的函数"></a>定时器的中断标志的函数</h3><pre><code> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 清除定时器初始化过程中的更新中断标志，避免定时器一启动就中断</span></span><br><span class="line">__HAL_TIM_CLEAR_IT(&amp;htim3, TIM_IT_UPDATE);</span><br><span class="line"><span class="comment">// 使能定时器3更新中断并启动定时器</span></span><br><span class="line"><span class="built_in">HAL_TIM_Base_Start_IT</span>(&amp;htim3);</span><br></pre></td></tr></table></figure></code></pre><h3 id="回调函数-1"><a href="#回调函数-1" class="headerlink" title="回调函数"></a>回调函数</h3><pre><code> <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//回调函数，定时器中断服务函数调用</span></span><br><span class="line"><span class="comment">//使用switch语句替代比较好</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HAL_TIM_PeriodElapsedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(htim==(&amp;htim2))</span><br><span class="line">    &#123;</span><br><span class="line">count_tim2++;</span><br><span class="line"><span class="keyword">if</span>(count_tim2==<span class="number">200</span>)</span><br><span class="line">&#123;</span><br><span class="line">        _LED1_=!_LED1_;        <span class="comment">//LED1反转</span></span><br><span class="line">count_tim2=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(htim==(&amp;htim9))</span><br><span class="line">    &#123;</span><br><span class="line">count_tim9++;</span><br><span class="line"><span class="keyword">if</span>(count_tim9==<span class="number">2000</span>)</span><br><span class="line">&#123;</span><br><span class="line">        _LED0_=!_LED0_;        <span class="comment">//LED1反转</span></span><br><span class="line">count_tim9=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><font face="微软雅黑" size=3 color=#F08080 ><br>T为定时时间，Psc为预分频数，Arr为自动重装载寄存器的值，Tclk为定时器的输入时钟。<br>这里为T为10ms，Tclk为72MHz，设置Psc为72-1，Arr为10000-1， 配置好定时器的时间后在NVIC Setting中打开定时器的更新中断，并且要使能自动重装载。</br></font><p><img src="https://img-blog.csdnimg.cn/20200615221657270.png" alt="img"></p><h3 id="PWM输出"><a href="#PWM输出" class="headerlink" title="PWM输出"></a>PWM输出</h3><font face="微软雅黑" size=3 color=#F08080 ><br>  设置GPIO口为：复用推挽输出，上拉，高速</br></font><p>  <img src="https://img-blog.csdnimg.cn/20210226155949193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1OTgyMDU5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="PWM模式"><a href="#PWM模式" class="headerlink" title="PWM模式"></a>PWM模式</h5><pre><code> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PWM模式一只要TIMX_CNT&lt;TIMX_CCRX，即为有效电平，PWM模式二刚好相反</span><br></pre></td></tr></table></figure></code></pre><h5 id="CCRX-对应Pulse"><a href="#CCRX-对应Pulse" class="headerlink" title="CCRX(对应Pulse)"></a>CCRX(对应Pulse)</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比较的值</span><br></pre></td></tr></table></figure><h5 id="CH-Porlarity"><a href="#CH-Porlarity" class="headerlink" title="CH Porlarity"></a>CH Porlarity</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">决定有效电平是高电平还是低电平 </span><br></pre></td></tr></table></figure><h5 id="改变CCRX值的函数"><a href="#改变CCRX值的函数" class="headerlink" title="改变CCRX值的函数"></a>改变CCRX值的函数</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置TIM通道4的占空比</span></span><br><span class="line"><span class="comment">//compare:比较值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TIM_SetTIM14Compare1</span><span class="params">(u32 compare)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TIM14-&gt;CCR1=compare; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定时器14的通道1所以是CCR1</span></span><br></pre></td></tr></table></figure><h5 id="stm32自带的改变CCRX的函数"><a href="#stm32自带的改变CCRX的函数" class="headerlink" title="stm32自带的改变CCRX的函数"></a>stm32自带的改变CCRX的函数</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">用下面的之前要有宏定义</span><br><span class="line">USE_HAL_LEGACY（包含进去就行）</span><br><span class="line">头文件</span><br><span class="line">stm32_hal_legacy.h也要</span><br><span class="line">_HAL_TIM_SET_COMPARE(&amp;TIM3_PWM_Handler,TIM_CHANNEL_1,PWM的CCR寄存器的值);<span class="comment">//设置寄存的值</span></span><br><span class="line">_HAL_TIM_GET_COMPARE(&amp;TIM3_PWM_Handler,TIM_CHANNEL_1);<span class="comment">//得到寄存器的值</span></span><br></pre></td></tr></table></figure><h5 id="启动PWM输出"><a href="#启动PWM输出" class="headerlink" title="启动PWM输出"></a>启动PWM输出</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">HAL_TIM_PWM_Start</span>(&amp;htim13,TIM_CHANNEL_1);</span><br><span class="line"><span class="comment">//还有停止的函数，自己找</span></span><br></pre></td></tr></table></figure><h5 id="PWM输出频率计算"><a href="#PWM输出频率计算" class="headerlink" title="PWM输出频率计算"></a>PWM输出频率计算</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Fpwm = <span class="number">100</span>M / ((arr+<span class="number">1</span>)*(psc+<span class="number">1</span>))(单位：Hz)</span><br><span class="line">arr 是计数值</span><br><span class="line">psc 是预分频值</span><br><span class="line">如：</span><br><span class="line"><span class="number">1.</span> 主频=<span class="number">100</span>M</span><br><span class="line"><span class="number">2.</span> arr=<span class="number">100</span><span class="number">-1</span></span><br><span class="line"><span class="number">3.</span> psc=<span class="number">1000</span><span class="number">-1</span></span><br><span class="line"><span class="number">100</span>,<span class="number">000</span>,<span class="number">000</span>/<span class="number">100</span>/<span class="number">1000</span>=<span class="number">1000</span>Hz</span><br><span class="line">比较的值是控制占空比的</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义变量</span></span><br><span class="line">u8 dir=<span class="number">1</span>;</span><br><span class="line">u16 led0pwmval=<span class="number">0</span>; </span><br><span class="line"><span class="comment">//while循环</span></span><br><span class="line"><span class="comment">/*************************************************</span></span><br><span class="line"><span class="comment">呼吸灯</span></span><br><span class="line"><span class="comment">*************************************************/</span></span><br><span class="line"><span class="built_in">delay_ms</span>(<span class="number">10</span>); </span><br><span class="line"><span class="keyword">if</span>(dir)led0pwmval++;<span class="comment">//dir==1 led0pwmval递增</span></span><br><span class="line"><span class="keyword">else</span> led0pwmval--;<span class="comment">//dir==0 led0pwmval递减 </span></span><br><span class="line"><span class="keyword">if</span>(led0pwmval&gt;<span class="number">300</span>)dir=<span class="number">0</span>;<span class="comment">//led0pwmval到达300后，方向为递减</span></span><br><span class="line"><span class="keyword">if</span>(led0pwmval==<span class="number">0</span>)dir=<span class="number">1</span>;<span class="comment">//led0pwmval递减到0后，方向改为递增</span></span><br><span class="line"><span class="built_in">TIM_SetTIM14Compare1</span>(led0pwmval);<span class="comment">//修改比较值，修改占空比</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="PWM输入捕获测量频率、占空比、高电平"><a href="#PWM输入捕获测量频率、占空比、高电平" class="headerlink" title="PWM输入捕获测量频率、占空比、高电平"></a>PWM输入捕获测量频率、占空比、高电平</h3><p>  主要就是配置一下初始的是上升沿捕获还是下降沿捕获，以及分频。</p><p>  一开始是上升沿触发就需要设置GPIO为下拉。</p><h4 id="tim-c文件"><a href="#tim-c文件" class="headerlink" title="tim.c文件"></a>tim.c文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义变量</span></span><br><span class="line">u8  TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//输入捕获状态    </span></span><br><span class="line">u32TIM5CH1_CAPTURE_VAL;<span class="comment">//输入捕获值(TIM5是16位)</span></span><br><span class="line">u8  count = <span class="number">0</span>;              <span class="comment">//计数+模式切换</span></span><br><span class="line">u32TIM5CH1_CAPTURE_UP1;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br><span class="line">u32TIM5CH1_CAPTURE_UP2;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br><span class="line">u32TIM5CH1_CAPTURE_DOWN;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br><span class="line">u32TIM5CH1_CAPTURE_DOWN;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br></pre></td></tr></table></figure><h4 id="tim-h文件"><a href="#tim-h文件" class="headerlink" title="tim.h文件"></a>tim.h文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> u8  TIM5CH1_CAPTURE_STA;<span class="comment">//输入捕获状态    </span></span><br><span class="line"><span class="keyword">extern</span> u32TIM5CH1_CAPTURE_VAL;<span class="comment">//输入捕获值(TIM5是16位)</span></span><br><span class="line"><span class="keyword">extern</span> u32TIM5CH1_CAPTURE_UP1;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br><span class="line"><span class="keyword">extern</span> u32TIM5CH1_CAPTURE_UP2;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br><span class="line"><span class="keyword">extern</span> u8  count;              <span class="comment">//计数+模式切换</span></span><br><span class="line"><span class="keyword">extern</span> u32TIM5CH1_CAPTURE_DOWN;<span class="comment">//输入捕获值(TIM2/TIM5是32位)</span></span><br></pre></td></tr></table></figure><h4 id="main-c文件"><a href="#main-c文件" class="headerlink" title="main.c文件"></a>main.c文件</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义的变量</span></span><br><span class="line">u32 temp_f=<span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> temp_d=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delay_ms</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span>(TIM5CH1_CAPTURE_STA&amp;<span class="number">0X80</span>)        <span class="comment">//成功捕获到了一次高电平</span></span><br><span class="line">&#123;</span><br><span class="line">__HAL_TIM_DISABLE(&amp;htim5);      <span class="comment">//关闭定时器5</span></span><br><span class="line">temp_f = TIM5CH1_CAPTURE_UP2  - TIM5CH1_CAPTURE_UP1;</span><br><span class="line">temp_d = TIM5CH1_CAPTURE_DOWN - TIM5CH1_CAPTURE_UP2;</span><br><span class="line">temp_d = temp_d*<span class="number">100</span> / temp_f;</span><br><span class="line">temp_f = <span class="number">1000000</span> / temp_f;</span><br><span class="line"><span class="comment">//printf(&quot;high1:%lu us\r\n&quot;,TIM5CH1_CAPTURE_UP1); //打印总的高点平时间</span></span><br><span class="line"><span class="comment">//printf(&quot;low:%lu us\r\n&quot;,TIM5CH1_CAPTURE_DOWN); //打印总的高点平时间</span></span><br><span class="line"><span class="comment">//printf(&quot;high2:%lu us\r\n&quot;,TIM5CH1_CAPTURE_UP2); //打印总的高点平时间</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;f:%d hz\r\n\n\n\n\n&quot;</span>,temp_f); <span class="comment">//频率打印</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;d:%f \r\n\n\n\n\n&quot;</span>,temp_d); <span class="comment">//占空比打印</span></span><br><span class="line">__HAL_TIM_SET_COUNTER(&amp;htim5,<span class="number">0</span>);</span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;          <span class="comment">//开启下一次捕获</span></span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">  __HAL_TIM_ENABLE(&amp;htim5);<span class="comment">//使能定时器5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="驱动文件（C）（写到对应的中断函数里面）"><a href="#驱动文件（C）（写到对应的中断函数里面）" class="headerlink" title="驱动文件（C）（写到对应的中断函数里面）"></a>驱动文件（C）（写到对应的中断函数里面）</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((TIM5CH1_CAPTURE_STA&amp;<span class="number">0X80</span>)==<span class="number">0</span>)<span class="comment">//还未成功捕获</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(__HAL_TIM_GET_FLAG(&amp;htim5, TIM_IT_CC1) != RESET)<span class="comment">//捕获1发生捕获事件的标志位</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM5CH1_CAPTURE_STA&amp;<span class="number">0X40</span>)<span class="comment">//捕获到一个下降沿 </span></span><br><span class="line">&#123;  </span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//清空</span></span><br><span class="line"> TIM5CH1_CAPTURE_DOWN=<span class="built_in">HAL_TIM_ReadCapturedValue</span>(&amp;htim5,TIM_CHANNEL_1);<span class="comment">//获取当前的捕获值.__HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_1,TIM_INPUTCHANNELPOLARITY_RISING); //CC1P=0 设置为上升沿捕获</span></span><br><span class="line">TIM5CH1_CAPTURE_STA|=<span class="number">0X80</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  </span><br><span class="line">&#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span>(count == <span class="number">1</span>)    <span class="comment">//还未开始,第一次捕获上升沿</span></span><br><span class="line">&#123;</span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//清空</span></span><br><span class="line">TIM5CH1_CAPTURE_UP1=<span class="built_in">HAL_TIM_ReadCapturedValue</span>(&amp;htim5,TIM_CHANNEL_1);<span class="comment">//获取当前的捕获值.</span></span><br><span class="line"><span class="comment">//TIM5CH1_CAPTURE_STA|=0X40;//标记捕获到了上升沿</span></span><br><span class="line"><span class="comment">//TIM_OC2PolarityConfig(TIM5,TIM_ICPolarity_Falling);//CC1P=1 设置为下降沿捕获</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(count == <span class="number">2</span>)    <span class="comment">//开始,第二次捕获上升沿</span></span><br><span class="line">&#123;</span><br><span class="line">TIM5CH1_CAPTURE_STA=<span class="number">0</span>;<span class="comment">//清空</span></span><br><span class="line">TIM5CH1_CAPTURE_UP2=<span class="built_in">HAL_TIM_ReadCapturedValue</span>(&amp;htim5,TIM_CHANNEL_1);<span class="comment">//获取当前的捕获值.</span></span><br><span class="line">TIM5CH1_CAPTURE_STA|=<span class="number">0X40</span>;</span><br><span class="line"> __HAL_TIM_SET_CAPTUREPOLARITY(&amp;htim5,TIM_CHANNEL_1,TIM_INPUTCHANNELPOLARITY_FALLING); <span class="comment">//CC1P=0 设置为上升沿捕获</span></span><br><span class="line"><span class="comment">//TIM5CH1_CAPTURE_STA|=0X80;//标记成功捕获到一次高电平脉宽</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;            </span><br><span class="line"> &#125;</span><br><span class="line">__HAL_TIM_CLEAR_IT(&amp;htim5, TIM_IT_UPDATE|TIM_IT_CC1); <span class="comment">//清除中断标志位（捕获中断以及更新中断）</span></span><br></pre></td></tr></table></figure><p>在驱动文件的H文件添加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br></pre></td></tr></table></figure><h4 id="打开捕获中断"><a href="#打开捕获中断" class="headerlink" title="打开捕获中断"></a>打开捕获中断</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HAL_TIM_IC_Start_IT(&amp;htim5,TIM_CHANNEL_1); </span><br></pre></td></tr></table></figure><h3 id="OLED模块使用"><a href="#OLED模块使用" class="headerlink" title="OLED模块使用"></a>OLED模块使用</h3><h4 id="Main头文件包含"><a href="#Main头文件包含" class="headerlink" title="Main头文件包含"></a>Main头文件包含</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;gui.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;test.h&quot;</span></span></span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">OLED_Init</span>();         <span class="comment">//初始化OLED  </span></span><br><span class="line"><span class="built_in">OLED_Clear</span>(<span class="number">0</span>);             <span class="comment">//清屏（全黑）</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">GUI_ShowString</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="string">&quot;VAL:&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);      </span><br><span class="line"><span class="built_in">GUI_ShowString</span>(<span class="number">0</span>,<span class="number">16</span>,<span class="string">&quot;adc:         V&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//先在固定位置显示小数点 </span></span><br><span class="line"><span class="built_in">GUI_ShowString</span>(<span class="number">0</span>,<span class="number">32</span>,<span class="string">&quot;dac:         V&quot;</span>,<span class="number">16</span>,<span class="number">1</span>);<span class="comment">//先在固定位置显示小数点 </span></span><br></pre></td></tr></table></figure></li></ul><h4 id="OLED显示函数"><a href="#OLED显示函数" class="headerlink" title="OLED显示函数"></a>OLED显示函数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">之后完善</span><br></pre></td></tr></table></figure><h4 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   VCC         接       DC 5V/3.3V      //OLED屏电源正</span></span><br><span class="line"><span class="comment">//   GND         接          GND          //OLED屏电源地</span></span><br><span class="line"><span class="comment">//=======================================液晶屏数据线接线==========================================//</span></span><br><span class="line"><span class="comment">//本模块默认数据总线类型为4线制SPI</span></span><br><span class="line"><span class="comment">// OLED模块               STM32单片机</span></span><br><span class="line"><span class="comment">//   MOSI        接          PB15        //OLED屏SPI写信号</span></span><br><span class="line"><span class="comment">//=======================================液晶屏控制线接线==========================================//</span></span><br><span class="line"><span class="comment">// OLED模块               STM32单片机</span></span><br><span class="line"><span class="comment">//   CS          接          PB11        //OLED屏片选控制信号</span></span><br><span class="line"><span class="comment">//   RES         接          PB12        //OLED屏复位控制信号</span></span><br><span class="line"><span class="comment">//   DC          接          PB10        //OLED屏数据/命令选择控制信号</span></span><br><span class="line"><span class="comment">//   CLK         接          PB13        //OLED屏SPI时钟信号</span></span><br></pre></td></tr></table></figure><h3 id="8x8矩阵键盘"><a href="#8x8矩阵键盘" class="headerlink" title="8x8矩阵键盘"></a>8x8矩阵键盘</h3><p>直接导入包，调用函数即可，main.h文件包含key.h文件，调用函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key=<span class="built_in">key_Scan</span>();<span class="comment">//返回按键的值，是1还是2</span></span><br></pre></td></tr></table></figure><h3 id="LCD屏幕驱动移植"><a href="#LCD屏幕驱动移植" class="headerlink" title="LCD屏幕驱动移植"></a>LCD屏幕驱动移植</h3><p>包含那个LCD的包就可以。</p><h3 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h3><p><a href="https://blog.csdn.net/weixin_50303783/article/details/109086972?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162565366416780269867916%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162565366416780269867916&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-4-109086972.first_rank_v2_pc_rank_v29&utm_term=hal%E5%BA%93stm32ADC&spm=1018.2226.3001.4187">ADC设置参考</a></p><ul><li><p>单次连续转换+DMA转移（软件触发）</p></li><li><p>定时器触发转换+DMA转移</p></li><li><p>trigger信号触发+DMA转移</p><ol><li><h5 id="CubeMax配置"><a href="#CubeMax配置" class="headerlink" title="CubeMax配置"></a>CubeMax配置</h5><h6 id="ADC-1"><a href="#ADC-1" class="headerlink" title="ADC"></a>ADC</h6><p><img src="C:\Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210712192022941.png" alt="image-20210712192022941"></p><p><img src="C:\Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210712192116324.png" alt="image-20210712192116324"></p><p><img src="C:\Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210712192149160.png" alt="image-20210712192149160"></p><h6 id="定时器-1"><a href="#定时器-1" class="headerlink" title="定时器"></a>定时器</h6><p><img src="C:\Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210713215917487.png" alt="image-20210713215917487"></p></li><li><h5 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h5></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*****************************</span></span><br><span class="line"><span class="comment">AD转换完成回调函数</span></span><br><span class="line"><span class="comment">由ADC中断或者DMA传输完成调用</span></span><br><span class="line"><span class="comment">*****************************/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HAL_ADC_ConvCpltCallback</span><span class="params">(ADC_HandleTypeDef* hadc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">flag_fft=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">HAL_ADC_Stop_DMA</span>(&amp;hadc1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">HAL_TIM_Base_Start</span>(&amp;htim8);<span class="comment">//开启定时器</span></span><br><span class="line"><span class="built_in">HAL_ADC_Start_DMA</span>(&amp;hadc1, (<span class="type">uint32_t</span> *)adc1_buffer, <span class="number">4096</span>);<span class="comment">//设置传递方向</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="FFT"><a href="#FFT" class="headerlink" title="FFT"></a>FFT</h3><ul><li><h4 id="核心函数"><a href="#核心函数" class="headerlink" title="核心函数"></a>核心函数</h4><ol><li></li></ol>   <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">arm_status <span class="title">arm_cfft_radix4_init_f32</span><span class="params">(arm_cfft_radix4_instance_f32 * S,</span></span></span><br><span class="line"><span class="params"><span class="function"></span></span></span><br><span class="line"><span class="params"><span class="function">                 <span class="type">uint16_t</span> fftLen,<span class="type">uint8_t</span> ifftFlag,<span class="type">uint8_t</span> bitReverseFlag)</span></span></span><br></pre></td></tr></table></figure><p>   在使用时，这个函数用于初始化 傅里叶变换运算的相关配置。fftLen用于确定FFT变换的长度，其默认有5种不同的设置，分别是（16&#x2F;64&#x2F;256&#x2F;1024&#x2F;4096）。本系统采用4096点傅里叶变换，故将此设置为4096。ifftFlag这个参数为0或者是1，为0时是傅里叶变换，为1时为傅里叶反变换，系统采用傅里叶变换，固将其配置为0；bitReverseFlag的取值为0或者1，为1时是按位取反，系统配置为1。最后这些参数存储在一个结构体指针S里面。</p>   <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> FFT_LENGTH        4096         <span class="comment">//FFT长度，默认是4096点FFT</span></span></span><br><span class="line">arm_cfft_radix4_instance_f32 rfft;</span><br><span class="line"><span class="built_in">arm_cfft_radix4_init_f32</span>(&amp;rfft,FFT_LENGTH,<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//初始化scfft结构体，设定FFT相关参数 </span></span><br></pre></td></tr></table></figure></li><li><h4 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h4><ol><li></li></ol>   <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> fft_inputbuf[FFT_LENGTH*<span class="number">2</span>];<span class="comment">//FFT输入数组</span></span><br><span class="line"><span class="type">float</span> fft_outputbuf[FFT_LENGTH];<span class="comment">//FFT输出数组</span></span><br></pre></td></tr></table></figure><p>2. </p></li><li></li></ul><p><img src="C:\Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210717193205071.png" alt="image-20210717193205071"></p><h4 id="DMA"><a href="#DMA" class="headerlink" title="DMA"></a>DMA</h4><ol><li><h6 id="串口-DMA"><a href="#串口-DMA" class="headerlink" title="串口+DMA"></a>串口+DMA</h6><p><a href="https://blog.csdn.net/as480133937/article/details/104827639?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162657599516780262530596%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162657599516780262530596&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-3-104827639.first_rank_v2_pc_rank_v29&utm_term=stm32%E4%B8%B2%E5%8F%A3%E5%8A%A0dma&spm=1018.2226.3001.4187">参考博客</a></p></li><li></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;STM32-Hal-Code&quot;&gt;&lt;a href=&quot;#STM32-Hal-Code&quot; class=&quot;headerlink&quot; title=&quot;STM32_Hal_Code&quot;&gt;&lt;/a&gt;STM32_Hal_Code&lt;/br&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#s</summary>
      
    
    
    
    <category term="STM32" scheme="http://example.com/categories/STM32/"/>
    
    
    <category term="Hal库" scheme="http://example.com/tags/Hal%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>STM32硬件知识</title>
    <link href="http://example.com/2021/07/07/STM32%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2021/07/07/STM32%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/</id>
    <published>2021-07-07T05:54:52.000Z</published>
    <updated>2022-09-30T12:24:52.980Z</updated>
    
    <content type="html"><![CDATA[<h4 id="引脚"><a href="#引脚" class="headerlink" title="引脚"></a>引脚</h4><ul><li><p>输入模式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入浮空（GPIO_Mode_IN_FLOATING）</span><br><span class="line">输入上拉(GPIO_Mode_IPU)</span><br><span class="line">输入下拉(GPIO_Mode_IPD)</span><br><span class="line">模拟输入(GPIO_Mode_AIN)</span><br></pre></td></tr></table></figure></li><li><p>输出模式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">开漏输出(GPIO_Mode_Out_OD)</span><br><span class="line">开漏复用功能(GPIO_Mode_AF_OD)</span><br><span class="line">推挽式输出(GPIO_Mode_Out_PP)</span><br><span class="line">推挽式复用功能(GPIO_Mode_AF_PP)</span><br></pre></td></tr></table></figure></li></ul><h3 id="中断优先级"><a href="#中断优先级" class="headerlink" title="中断优先级"></a>中断优先级</h3><p>中断的抢占优先级和响应优先级决定中断顺序</p><p>假定设置中断优先级分组为2，然后设置中断3的抢占优先级为2，响应优先级是1，中断6的抢占优先级是3，响应优先级是0.中断7的抢占优先级是2，响应优先级是0.中断优先级顺序：7&gt;3&gt;6<br>先看抢占优先级。</p><h4 id="输入捕获"><a href="#输入捕获" class="headerlink" title="输入捕获"></a>输入捕获</h4><p>捕获完成之后要关闭输入捕获定时器</p><pre><code>        temp_f = TIM5CH1_CAPTURE_UP2  - TIM5CH1_CAPTURE_UP1;        temp_d = TIM5CH1_CAPTURE_DOWN - TIM5CH1_CAPTURE_UP2;</code></pre><p>temp_f是一个周期的时间</p><p>temp_d是高电平持续时间</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;引脚&quot;&gt;&lt;a href=&quot;#引脚&quot; class=&quot;headerlink&quot; title=&quot;引脚&quot;&gt;&lt;/a&gt;引脚&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;输入模式&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;</summary>
      
    
    
    
    <category term="stm32" scheme="http://example.com/categories/stm32/"/>
    
    
    <category term="stm32" scheme="http://example.com/tags/stm32/"/>
    
  </entry>
  
</feed>
